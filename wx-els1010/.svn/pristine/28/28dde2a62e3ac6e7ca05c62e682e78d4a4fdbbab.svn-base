 let TAG = '[game/lottery/lottery_view.js]]';

 let lotterygetview = require('./lottery_get_view'); //* 大转盘管理
 let LOCAL_STOREITEM_KEY = "tt-items";
 cc.Class({
     extends: cc.Component,
     properties: {
         nodeDisk: cc.Node,
         lottery_item: cc.Prefab,
         background: cc.Node,
         alltnode: {
             type: cc.Node,
             default: [],
         },
         allbtnnode: {
             type: cc.Node,
             default: [],
         },
         videoBtn: cc.Node,
         shareBtn: cc.Node,
         freeBtn: cc.Node,
     },

     chouJiangCall: function () {
         if (this.isLottering) return;
         this.lottery();
     },

     onLoad() {
         const self = this;

         // 初始化按钮的事件
         // 视频抽奖
         const videoBtnScript = this.videoBtn.getComponent("ShareButton")
         videoBtnScript.setButtonCallType(2);
         videoBtnScript.setShareConfig(tywx.tt.constants.ShareConfig.HOME_ZP_GET_VIDEO);
         videoBtnScript.setSuccessCall(function () {
             self.chouJiangCall();
         });
         // 分享抽奖
         const shareBtnScript = this.shareBtn.getComponent("ShareButton")
         shareBtnScript.setButtonCallType(1);
         shareBtnScript.setShareConfig(tywx.tt.constants.ShareConfig.HOME_ZP_GET_SHARE);
         shareBtnScript.setSuccessCall(function () {
             self.chouJiangCall();
         });
         // 免费抽奖
         const freeBtnScript = this.freeBtn.getComponent("ShareButton")
         freeBtnScript.setButtonCallType(1);
         freeBtnScript.setReactCall(true);
         freeBtnScript.setShareConfig(tywx.tt.constants.ShareConfig.HOME_ZP_FREE_SHARE);
         freeBtnScript.setSuccessCall(function () {
             self.chouJiangCall();
         });
         this.freeBtn.active = true;
     },

     start() {

     },

     setData: function (data) {
         if (data) {
             this.data = data;
             this.initUI();
         } else {
             tywx.tt.error(TAG, "没有抽奖数据");
         }
     },

     closeView: function () {
         tywx.tt.lottery.removeLotteryView();
     },

     initUI: function () {
         // 初始化道具UI
         var pre = 0;
         for (var ti = 0; ti < 6; ti++) {
             let lotteryItem = cc.instantiate(this.lottery_item);
             pre = ti * 60;
             lotteryItem.rotation = pre;
             let item_script = lotteryItem.getComponent('lottery_item');
             var data = this.data.items[ti];
             item_script.setData(data);
             this.alltnode[ti].addChild(lotteryItem);
         }
         // 初始化按钮UI
         this.initUiButton();
     },

     /**
      * @description 控制按钮的显示
      */
     initUiButton: function () {
         const buttypes = this.data.button_types;
         const buttonindex = buttypes[0];
         const buttontype = buttypes[1][buttonindex];
         const buttons = buttontype.split("_");

         tywx.tt.log("当前显示的buttons = " + JSON.stringify(buttons));
         var typebtn = [];
         var btntype = buttons[0];

         for (var tin = 0; tin < buttons.length; tin++) {
             if (buttons[tin] == "share") {
                 typebtn[tin] = this.shareBtn;
                 this.shareBtn.active = true;
             } else if (buttons[tin] == "video") {
                 typebtn[tin] = this.videoBtn;
                 this.videoBtn.active = true;
             } else if (buttons[tin] == "free") {
                 typebtn[tin] = this.freeBtn;
                 this.freeBtn.active = true;
             }
         }
         if (typebtn.length == 1) {
             typebtn[0].position = this.allbtnnode[1];
         }
         if (typebtn.length == 2) {
             typebtn[0].position = this.allbtnnode[0];
             typebtn[1].position = this.allbtnnode[2];
         }



     },

     // update (dt) {},
     btnStartLottery() {
         if (this.isLottering) return;
         this.lottery();
     },
     lottery() {
         let aims = [0, 1, 2, 3, 4, 5];
         let aim_id = aims[parseInt(Math.random() * aims.length)];
         this.item = this.data.items[aim_id];
         let self = this;
         let current_rotate = this.nodeDisk.rotation % 360;
         //let last_aim_id = parseInt(current_rotate / 60);
         this.isLottering = true;
         this.nodeDisk.runAction(
             cc.sequence(
                 cc.rotateBy(1, 360 * 2 - current_rotate).easing(cc.easeIn(2.0)),
                 cc.rotateBy(2, 360 * 3),
                 cc.rotateBy(1, 360 * 2 - aim_id * 60).easing(cc.easeOut(1.0)),
                 cc.callFunc(() => {
                     self.storeCurrentItem();
                     self.isLottering = false;
                 })
             )
         );
     },

     init() {
         //  this.aim_id = 0;
         //  for (let i = 0; i < 6; ++i) {
         //      let lable_name = `label_${i}`;
         //      let label_node = this.nodeLabelRoot.getChildByName(lable_name);
         //      if (label_node) {
         //          label_node.getComponent(cc.Label).string = `礼物${i}`;
         //      }
         //  }
     },

     /**
      * @description 存储当前的转到的道具
      */
     storeCurrentItem: function () {
         var items = JSON.parse(tywx.tt.Utils.loadItem(LOCAL_STOREITEM_KEY, "[]"));
         var allitems = [];
         if (items.length > 0) {
             var findit = false;
             for (var itIndex = 0; itIndex < items.length; itIndex++) {
                 const item = items[itIndex];
                 if (item.id == this.item.gift_id) {
                     findit = true;
                     item.num = item.num + 1;
                 }
                 allitems.push(item);
             }
             if (!findit) {
                 const titem = this.getAddItem();
                 allitems[allitems.length] = titem;
             }
         } else {
             var titem = this.getAddItem();
             allitems[0] = titem;
         }
         tywx.tt.Utils.saveItem(LOCAL_STOREITEM_KEY, JSON.stringify(allitems), false);
         
         const self = this;
         if (this.item.gift_id == 2 || this.item.gift_id == 4 || this.item.gift_id == 6 ) {
             lotterygetview.show(this.item);
         } else {
             tywx.tt.Utils.requestAddRedPacket({
                 success: function (res) {
                    //  console.log("qing求数据 = " + JSON.stringify(res));
                     self.item.name = res+"元";
                     lotterygetview.show(self.item)
                 },
                 fail: function () {
                     tywx.tt.Utils.showWXToast("请求失败");
                 }
             });
         }

         tywx.tt.log("当前所转到的道具数据  = " + JSON.stringify(allitems));
     },

     getAddItem: function () {
         var titem = {};
         titem.id = this.item.gift_id;
         titem.num = this.item.number || 1;
         titem.name = this.item.name;
         titem.icon = this.item.icon;
         return titem;
     }
     
   




 });