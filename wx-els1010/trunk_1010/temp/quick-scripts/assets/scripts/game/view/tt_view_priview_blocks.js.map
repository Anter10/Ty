{"version":3,"sources":["tt_view_priview_blocks.js"],"names":["TAG","SCALE_TOUCH","SCALE_NORMAL","cc","Class","extends","Component","properties","prefabBlock","Prefab","onLoad","hadPut","blockViews","sametype","Map","pretypenumber","precount","sameindex","samekey","start","init","config","tywx","tt","log","JSON","stringify","x","y","w","h","b_s","constants","BlockSize","root","node","getChildByName","max","length","i","height","j","width","stat","tmp_block","instantiate","parent","position","v2","getComponent","setStat","hideBg","push","scale","touch","runAction","scaleTo","touchCancle","put","active","getConfig","error","isCanPut","resetByConfig","setGrey","script","getStat","hideGrey","console","getCongifTypeNumber","tconfig","findit","findnumber","findcount","indexcount","row","column","c","forEach","number","count","index","setSameTypeConfig","info","blocks","Blocks","blockindex","block","ele","ti","changeType"],"mappings":"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","file":"tt_view_priview_blocks.js","sourceRoot":"../../../../../../assets/scripts/game/view","sourcesContent":["let TAG = '[tt_view_priview_blocks]';\nlet SCALE_TOUCH = 1.0;\nlet SCALE_NORMAL = 0.34;\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        prefabBlock: cc.Prefab\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        this.hadPut = false; // * 是否已经放置到棋盘\n        this.blockViews = [];\n        this.sametype = new Map();\n        this.pretypenumber = 0;\n        this.precount = 0;\n        this.sameindex = 0;\n        this.samekey = [];\n    },\n\n    start() {\n\n    },\n\n    // update (dt) {},\n    init(config) {\n        this.config = config;\n        this.blockViews = [];\n        tywx.tt.log(TAG, JSON.stringify(config));\n        let [x, y, w, h] = [0, 0, 380, 380];\n        let b_s = tywx.tt.constants.BlockSize;\n        x = -w / 2;\n        y = -h / 2;\n        this.root = this.node.getChildByName('root');\n        let max = config.length - 1;\n        for (let i = config.length - 1; i >= 0; --i) {\n            y = b_s.height * (max - i) + (-h / 2);\n            this.blockViews[i] = [];\n            for (let j = 0; j < config[i].length; ++j) {\n                x = b_s.width * j + (-w / 2);\n                let stat = config[i][j];\n                let tmp_block = cc.instantiate(this.prefabBlock);\n                tmp_block.parent = this.root;\n                tmp_block.position = cc.v2(x, y);\n                tmp_block.getComponent('tt_view_block').setStat(stat);\n                tmp_block.getComponent('tt_view_block').hideBg();\n                this.blockViews[i].push(tmp_block);\n            }\n            tywx.tt.log(TAG, `y=${y}`);\n        }\n        this.root.scale = 0.8;\n    },\n    touch() {\n        tywx.tt.log(TAG, 'touch');\n        this.node.runAction(\n            cc.scaleTo(0.2, SCALE_TOUCH)\n        );\n    },\n    touchCancle() {\n        tywx.tt.log(TAG, 'touch cancle');\n        this.node.runAction(\n            cc.scaleTo(0.2, SCALE_NORMAL)\n        );\n        // 在这里处理变形\n        // this.changeType();\n    },\n    put() {\n        this.root.active = false;\n        this.node.runAction(\n            cc.scaleTo(0.2, SCALE_NORMAL)\n        );\n        this.hadPut = true;\n    },\n    getConfig() {\n        if (!this.config) {\n            tywx.tt.error(TAG, `getConfig error, config=${this.config}`);\n            return null;\n        }\n        return this.config;\n    },\n    isCanPut() {\n        return this.hadPut;\n    },\n    resetByConfig(config) {\n        tywx.tt.log(TAG, `resetByConfig===>${config}`);\n        this.config = config;\n\n        this.root.active = true;\n        this.hadPut = false;\n        for (let i = config.length - 1; i >= 0; --i) {\n            //this.blockViews[i] = [];\n            for (let j = 0; j < config[i].length; ++j) {\n                let stat = config[i][j];\n                let tmp_block = this.blockViews[i][j];\n                tmp_block.getComponent('tt_view_block').setStat(stat);\n                tmp_block.getComponent('tt_view_block').hideBg();\n            }\n        }\n        //this.setSameTypeConfig();\n    },\n\n    setGrey: function () {\n        for (let i = 0; i < this.config.length; i ++ ) {\n            //this.blockViews[i] = [];\n            for (let j = 0 ; j < this.config[i].length; j++) {\n                    let tmp_block = this.blockViews[i][j];\n                    let script = tmp_block.getComponent('tt_view_block');\n                    if (script.getStat() > 0) {\n                        script.setStat(13);\n                    }\n            }\n        }\n    },\n\n    hideGrey: function () {\n         console.log(\"hide state -= \");\n        for (let i = 0; i < this.config.length; i++) {\n            for (let j = 0; j < this.config[i].length; j++) {\n                 let tmp_block = this.blockViews[i][j];\n                 let script = tmp_block.getComponent('tt_view_block');\n                 \n                 if (this.config[i][j] > 0) {\n                    \n                     script.setStat(this.config[i][j]);\n                 }\n             }\n         }\n     },\n\n    getCongifTypeNumber: function () {\n        let tconfig = this.getConfig();\n        tywx.tt.log(TAG, \"tconfig -= \" + tconfig);\n        var findit = false;\n        var findnumber = null;\n        var findcount = 0;\n        var indexcount = 0;\n        var row = 0;\n        var column = 0;\n        for (let c of tconfig) {\n            row++;\n            column = 0;\n            c.forEach(number => {\n                row++;\n                column++;\n                if (number != 0) {\n                    findit = true;\n                    findnumber = number;\n                    findcount++;\n                    indexcount = row * (indexcount + row) + column;\n                }\n            });\n        }\n        return {\n            number: findnumber,\n            count: findcount,\n            index: indexcount\n        };\n    },\n\n\n    setSameTypeConfig: function () {\n        let info = this.getCongifTypeNumber();\n        if (this.pretypenumber == info.number && this.precount == info.count) {\n            return;\n        }\n        this.sametype = new Map();\n        this.samekey = [];\n        this.pretypenumber = info.number;\n        this.precount = info.count;\n        tywx.tt.log(TAG, \"typenumber = \" + JSON.stringify(info));\n        let blocks = tywx.tt.constants.Blocks;\n        let blockindex = 0;\n\n        for (let block of blocks) {\n            var findcount = 0;\n            var indexcount = 0;\n            var row = 0;\n            var column = 0;\n            blockindex++;\n            for (let ele of block) {\n                row++;\n                ele.forEach(number => {\n                    row++;\n                    column++;\n                    if (number == this.pretypenumber) {\n                        findcount++;\n                        indexcount = row * (indexcount + row) + column;\n                    }\n\n                });\n            }\n            if (findcount == info.count) {\n                // console.log(blockindex + \"indexcount = \" + indexcount);\n                this.samekey[this.samekey.length] = indexcount;\n                this.sametype[indexcount + \"\"] = block;\n            }\n            for (let ti = 0; ti < this.samekey.length; ti++) {\n                if (this.pretypenumber == this.samekey[ti]) {\n                    this.sameindex = ti + 1;\n                    break;\n                }\n            }\n\n            if (this.sameindex >= this.samekey.length) {\n                this.sameindex = 0;\n            }\n\n            blockindex++;\n        }\n\n    },\n\n    changeType: function () {\n        if (this.sameindex >= this.samekey.length) {\n            this.sameindex = 0;\n        }\n        let tconfig = this.sametype[this.samekey[this.sameindex + \"\"]];\n        if (tconfig) {\n            this.resetByConfig(tconfig);\n        }\n        tywx.tt.log(TAG, \"index = \" + this.sameindex);\n        tywx.tt.log(TAG, \"当前= \" + JSON.stringify(tconfig) +\n            \" 全部\" + this.samekey.length + \"changeType sametype = \" + JSON.stringify(this.sametype));\n\n        this.sameindex = this.sameindex + 1;\n        if (this.sameindex > this.samekey.length) {\n            this.sameindex = 0;\n        }\n    }\n\n});"]}