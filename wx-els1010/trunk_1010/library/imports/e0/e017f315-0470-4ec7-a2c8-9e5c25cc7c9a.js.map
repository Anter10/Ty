{"version":3,"sources":["../../../../../../assets/scripts/game/cross_ad/assets/scripts/game/cross_ad/ads_blink.js"],"names":["TAG","node_path","ads_blink","cc","Class","extends","Component","properties","adnode","Prefab","setData","data","tywx","tt","log","JSON","stringify","initUI","alladnode","t","ads_data","length","instantiate","ads_script","getComponent","vpos","v2","node","width","height","position","active","addChild","push","blinkindex","getBlinkIndex","effectAni","blink_display","blink","delay","delayTime","self","call","callFunc","seq","sequence","repeatef","repeatForever","runAction","preblinkindex","angle","stopAllActions","scale1","scaleTo","scale2","rep","random","Math","trand","qzindex","ads_qz","onLoad"],"mappings":"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","file":"ads_blink.js","sourceRoot":"../../../../../../assets/scripts/game/cross_ad","sourcesContent":["/** \n * @description \n * created by gyc on 20181012\n */\n\nlet TAG = \"[game/cross_ad/ads_blink.js]\";\nlet node_path = \"prefabs/ads_blink\";\n\nlet ads_blink = cc.Class({\n    extends: cc.Component,\n    properties: {\n        adnode: cc.Prefab,\n    },\n\n    /**\n     * @description 设置交叉倒流的数据\n     * @param {Object} data 交叉倒流的数据\n     */\n    setData: function (data) {\n        this.data = data;\n        tywx.tt.log(TAG, \"广告设置了数据 \" + JSON.stringify(data));\n        this.initUI();\n    },\n\n\n    /**\n     * \n     * @param {*} ads_type \n     */\n    initUI: function () {\n        this.alladnode = [];\n        for (var t = 0; t < this.data.ads_data.length; t++) {\n            let data = this.data.ads_data[t];\n            let adnode = cc.instantiate(this.adnode);\n            let ads_script = adnode.getComponent('ad_node');\n            ads_script.setData(data);\n            let vpos = cc.v2(this.node.width / 2, this.node.height / 2);\n            adnode.position = vpos;\n            adnode.active = false;\n            this.node.addChild(adnode);\n            this.alladnode.push(adnode);\n        }\n        this.blinkindex = this.getBlinkIndex();\n        this.alladnode[this.blinkindex].active = true;\n        this.effectAni(this.alladnode[this.blinkindex]);\n        this.blink_display = this.data.blink_display;\n        this.blink();\n    },\n\n    blink: function () {\n        const delay = cc.delayTime(this.blink_display);\n        const self = this;\n        const call = function () {\n            self.alladnode[self.blinkindex].active = false;\n            self.blinkindex = self.getBlinkIndex();\n            self.alladnode[self.blinkindex].active = true;\n            self.effectAni(self.alladnode[self.blinkindex]);\n        }\n        const callFunc = cc.callFunc(call);\n        const seq = cc.sequence(delay, callFunc);\n        const repeatef = cc.repeatForever(seq);\n        this.node.runAction(repeatef);\n    },\n\n    /**\n     * @description 节点动画\n     */\n    effectAni: function (node) {\n        if (this.preblinkindex == this.blinkindex) {\n            return;\n        }\n        if (node) {\n            let angle = 20;\n            node.stopAllActions();\n            //    node.rotation = -angle;\n            //    node.anchorX = 0.5;\n            //    node.anchorY = 0.7;\n            //    const delay1 = cc.delayTime(0.1);\n            //    const delay2 = cc.delayTime(0.1);\n            //    const delay3 = cc.delayTime(0.3);\n            //    const left = cc.rotateBy(0.6, angle);\n            //    const right = cc.rotateBy(0.6, -angle);\n            //    const seq = cc.sequence(delay3,left, delay1, right, delay2);\n            //    const rep = cc.repeatForever(seq);\n\n            let scale1 = cc.scaleTo(0.7, 1.1);\n            let scale2 = cc.scaleTo(0.5, 1);\n            const seq = cc.sequence(scale1, scale2);\n            const rep = cc.repeatForever(seq);\n            node.runAction(rep);\n            this.preblinkindex = this.blinkindex;\n        }\n    },\n\n    getBlinkIndex: function () {\n        let random = Math.random() * 100;\n        var trand = 0;\n        for (var qzindex = 0; qzindex < this.data.ads_qz.length; qzindex++) {\n            if (qzindex <= this.data.ads_qz.length - 2) {\n                trand = trand + this.data.ads_qz[qzindex];\n                if (random < trand) {\n                    return qzindex;\n                }\n            } else {\n                return qzindex;\n            }\n        }\n    },\n\n    onLoad: function () {\n\n    },\n\n\n});"]}