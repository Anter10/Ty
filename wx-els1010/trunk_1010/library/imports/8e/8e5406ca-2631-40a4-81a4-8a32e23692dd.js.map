{"version":3,"sources":["../../../../../../assets/scripts/game/model/assets/scripts/game/model/AudioManager.js"],"names":["_instance","LOCAL_MUTE_KEY","AudioManager","bgMusicContext","isMute","bgMusicCache","Map","soundsCache","tisMute","tywx","tt","Utils","loadItem","music_config","Configs","MUSICS","music_keys","Reflect","ownKeys","self","forEach","has","music_key","addMusic2CacheByUrl","url","is_play","tmp_sound_context","wx","createInnerAudioContext","src","autoPlay","loop","volume","set","play","e","cc","error","tmp_music_context","log","stopMusic","get","tmp_context","addSound2CacheByUrl","stop","is_mute","saveItem","init","module","exports"],"mappings":"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","file":"AudioManager.js","sourceRoot":"../../../../../../assets/scripts/game/model","sourcesContent":["/**\n * @file: AudioManager.getInstance().js\n * @description: 声音管理器\n * @author: lu ning\n * @email: luning@tuyoogame.com\n * @date: 2018-08-22\n */\n\nlet _instance = null; //! 单例，私有\nlet LOCAL_MUTE_KEY = 'ado_mute';\nlet AudioManager = class{\n\n    /**\n     * @description\n     * @author lu ning\n     * @date 2018-08-22\n     * @static\n     * @returns\n     */\n    static getInstance() {\n        if (!_instance) {\n            _instance = new AudioManager();\n            _instance.init();\n        }\n        tywx.tt.log(\"getInstance ddd\");\n        return _instance;\n    }\n    init() {\n        this.bgMusicContext = null;\n        this.isMute = false; //* 是否静音\n        this.bgMusicCache = new Map();\n        this.soundsCache = new Map();\n        var tisMute = tywx.tt.Utils.loadItem(LOCAL_MUTE_KEY, false);\n        if (tisMute == \"false\") {\n            this.isMute = false;\n        }else{\n            this.isMute = true;\n        }\n    }\n    /**\n     * @description 资源预加载\n     * @author lu ning\n     * @date 2018-08-23\n     */\n    loadAudioRes() {\n        // let sounds_config = tywx.tt.Constants.GameCenterConfig.SOUNDS;\n        let music_config = tywx.tt.Configs.MUSICS;\n        // let sound_keys = Reflect.ownKeys(sounds_config);\n        let music_keys = Reflect.ownKeys(music_config);\n        let self = this;\n        // sound_keys.forEach(sound_key => {\n        //     if (!self.soundsCache.has(sounds_config[sound_key])) {\n        //         self.addSound2CacheByUrl(sounds_config[sound_key]);\n        //     }\n        // });\n        music_keys.forEach(music_key => {\n            if (!self.bgMusicCache.has(music_config[music_key])) {\n                self.addMusic2CacheByUrl(music_config[music_key]);\n            }\n        });\n    }\n    /**\n     * @description 根据url添加声音资源到缓存池\n     * @author lu ning\n     * @date 2018-08-23\n     * @param {String} url 路径\n     * @param {boolean} [is_play=false] 是否播放\n     */\n    addSound2CacheByUrl(url, is_play = false) {\n        try {\n            let tmp_sound_context = wx.createInnerAudioContext();\n            tmp_sound_context.src = url;\n            tmp_sound_context.autoPlay = false;\n            tmp_sound_context.loop = false;\n            tmp_sound_context.volume = 1.0;\n            this.soundsCache.set(url, tmp_sound_context);\n            is_play && tmp_sound_context.play();\n        } catch (e) {\n            cc.error(`addSound2CacheByUrl error ${url}`);\n        }\n    }\n    /**\n     * @description 添加背景音乐到缓存池\n     * @author lu ning\n     * @date 2018-08-23\n     * @param {String} url 路径\n     * @param {boolean} [is_play=false] 是否播放\n     */\n    addMusic2CacheByUrl(url, is_play = false) {\n        try {\n            let tmp_music_context = wx.createInnerAudioContext();\n            tmp_music_context.src = url;\n            tmp_music_context.autoPlay = false;\n            tmp_music_context.loop = true; //* 所有的背景音乐都默认循环\n            tmp_music_context.volume = 1.0;\n            this.bgMusicCache.set(url, tmp_music_context);\n            if (is_play) {\n                tmp_music_context.play();\n                this.bgMusicContext = tmp_music_context;\n            }\n        } catch (e) {\n            cc.error(`addMusic2CacheByUrl error ${url}`);\n        }\n    }\n    /**\n     * * 播放背景音乐 \n     *\n     * @param {String} url 背景音乐url\n     * @param {boolean} [loop=true] 是否循环 废弃\n     * @param {number} [valume=1.0] 音量 废弃\n     */\n    playMusic(url, loop = true, volume = 1.0) {\n        tywx.tt.log(\"播放音乐22  = \" + this.isMute);\n        this.stopMusic();\n        \n        if (this.isMute) return; //! 静音\n        if (this.bgMusicCache.has(url)) {\n            this.bgMusicContext = this.bgMusicCache.get(url);\n            this.bgMusicContext.play();\n            tywx.tt.log(\"播放音乐22  = \" + this.isMute);\n        } else {\n            this.addMusic2CacheByUrl(url, true);\n        }\n    }\n    /**\n     * @description 播放声效\n     * @author lu ning\n     * @date 2018-08-23\n     * @param {String} url\n     */\n    playSound(url) {\n        if (this.isMute) return; //! 静音\n        if (this.soundsCache.has(url)) {\n            let tmp_context = this.soundsCache.get(url);\n            tmp_context.play();\n        } else {\n            this.addSound2CacheByUrl(url, true);\n        }\n    }\n    /**\n     * * 停止播放背景音乐\n     *\n     */\n    stopMusic() {\n        if (this.bgMusicContext) {\n            this.bgMusicContext.stop();\n        }\n        this.bgMusicContext = null;\n    }\n    setIsMute(is_mute) {\n        this.isMute = is_mute;\n        tywx.tt.Utils.saveItem(LOCAL_MUTE_KEY, this.isMute, false);\n    }\n    getIsMute() {\n        return this.isMute;\n    }\n\n};\n\nmodule.exports = AudioManager;"]}