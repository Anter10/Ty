{"version":3,"sources":["../../../../../../assets/scripts/game/model/assets/scripts/game/model/AudioManager.js"],"names":["_instance","LOCAL_MUTE_KEY","curplaymusicurl","AudioManager","bgMusicContext","isMute","bgMusicCache","Map","soundsCache","tisMute","tywx","tt","Utils","loadItem","sounds_config","constants","SOUNDS","music_config","configManager","getInstance","MUSICS","console","log","JSON","stringify","sound_keys","Reflect","ownKeys","music_keys","self","forEach","has","sound_key","addSound2CacheByUrl","music_key","addMusic2CacheByUrl","SystemInfo","musicurl","url","is_play","tmp_sound_context","wx","createInnerAudioContext","src","autoPlay","loop","volume","set","play","e","cc","error","tmp_music_context","stopMusic","get","tmp_context","stop","is_mute","saveItem","bgmusics","BG_MUSIC","length","parseInt","Math","random","init","module","exports"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;AAQA,IAAIA,YAAY,IAAhB,EAAsB;AACtB,IAAIC,iBAAiB,UAArB;AACA,IAAIC,kBAAkB,IAAtB;AACA,IAAIC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAiBO;AACH,iBAAKC,cAAL,GAAsB,IAAtB;AACA,iBAAKC,MAAL,GAAc,KAAd,CAFG,CAEkB;AACrB,iBAAKC,YAAL,GAAoB,IAAIC,GAAJ,EAApB;AACA,iBAAKC,WAAL,GAAmB,IAAID,GAAJ,EAAnB;AACA,gBAAIE,UAAUC,KAAKC,EAAL,CAAQC,KAAR,CAAcC,QAAd,CAAuBZ,cAAvB,EAAuC,KAAvC,CAAd;AACA,gBAAIQ,WAAW,OAAf,EAAwB;AACpB,qBAAKJ,MAAL,GAAc,KAAd;AACH,aAFD,MAEK;AACD,qBAAKA,MAAL,GAAc,IAAd;AACH;AACJ;AACD;;;;;;AA7BA;AAAA;AAAA,uCAkCe;AACX,gBAAIS,gBAAgBJ,KAAKC,EAAL,CAAQI,SAAR,CAAkBC,MAAtC;AACA,gBAAIC,eAAeP,KAAKC,EAAL,CAAQO,aAAR,CAAsBC,WAAtB,GAAoCC,MAAvD;;AAEAC,oBAAQC,GAAR,CAAY,kBAAkBC,KAAKC,SAAL,CAAeV,aAAf,CAA9B;AACA,gBAAIW,aAAaC,QAAQC,OAAR,CAAgBb,aAAhB,CAAjB;AACA,gBAAIc,aAAaF,QAAQC,OAAR,CAAgBV,YAAhB,CAAjB;AACA,gBAAIY,OAAO,IAAX;AACAJ,uBAAWK,OAAX,CAAmB,qBAAa;AAC5B,oBAAI,CAACD,KAAKrB,WAAL,CAAiBuB,GAAjB,CAAqBjB,cAAckB,SAAd,CAArB,CAAL,EAAqD;AACjDH,yBAAKI,mBAAL,CAAyBnB,cAAckB,SAAd,CAAzB;AACH;AACJ,aAJD;AAKAJ,uBAAWE,OAAX,CAAmB,qBAAa;AAC5B,oBAAI,CAACD,KAAKvB,YAAL,CAAkByB,GAAlB,CAAsBd,aAAaiB,SAAb,CAAtB,CAAL,EAAqD;AACjDL,yBAAKM,mBAAL,CAAyBzB,KAAK0B,UAAL,CAAgBC,QAAhB,GAA2BpB,aAAaiB,SAAb,CAApD;AACH;AACJ,aAJD;AAMH;AACD;;;;;;;;AAtDA;AAAA;AAAA,4CA6DoBI,GA7DpB,EA6D0C;AAAA,gBAAjBC,OAAiB,uEAAP,KAAO;;AACtC,gBAAI;AACA,oBAAIC,oBAAoBC,GAAGC,uBAAH,EAAxB;AACAF,kCAAkBG,GAAlB,GAAwBL,GAAxB;AACAE,kCAAkBI,QAAlB,GAA6B,KAA7B;AACAJ,kCAAkBK,IAAlB,GAAyB,KAAzB;AACAL,kCAAkBM,MAAlB,GAA2B,GAA3B;AACA,qBAAKtC,WAAL,CAAiBuC,GAAjB,CAAqBT,GAArB,EAA0BE,iBAA1B;AACAD,2BAAWC,kBAAkBQ,IAAlB,EAAX;AACH,aARD,CAQE,OAAOC,CAAP,EAAU;AACRC,mBAAGC,KAAH,gCAAsCb,GAAtC;AACH;AACJ;AACD;;;;;;;;AA1EA;AAAA;AAAA,4CAiFoBA,GAjFpB,EAiF0C;AAAA,gBAAjBC,OAAiB,uEAAP,KAAO;;AACtClB,oBAAQC,GAAR,CAAY,aAAWgB,GAAvB;AACA,gBAAI;AACA,oBAAIc,oBAAoBX,GAAGC,uBAAH,EAAxB;AACAU,kCAAkBT,GAAlB,GAAwBL,GAAxB;AACAc,kCAAkBR,QAAlB,GAA6B,KAA7B;AACAQ,kCAAkBP,IAAlB,GAAyB,IAAzB,CAJA,CAI+B;AAC/BO,kCAAkBN,MAAlB,GAA2B,GAA3B;AACA,qBAAKxC,YAAL,CAAkByC,GAAlB,CAAsBT,GAAtB,EAA2Bc,iBAA3B;AACA,oBAAIb,OAAJ,EAAa;AACTa,sCAAkBJ,IAAlB;AACA,yBAAK5C,cAAL,GAAsBgD,iBAAtB;AACH;AACJ,aAXD,CAWE,OAAOH,CAAP,EAAU;AACRC,mBAAGC,KAAH,gCAAsCb,GAAtC;AACH;AACJ;AACD;;;;;;;;AAlGA;AAAA;AAAA,kCAyGUA,GAzGV,EAyG0C;AAAA,gBAA3BO,IAA2B,uEAApB,IAAoB;AAAA,gBAAdC,MAAc,uEAAL,GAAK;;AACtCpC,iBAAKC,EAAL,CAAQW,GAAR,CAAY,eAAe,KAAKjB,MAAhC;AACA,iBAAKgD,SAAL;AACA,gBAAI,KAAKhD,MAAT,EAAiB,OAHqB,CAGb;AACzB,gBAAI,KAAKC,YAAL,CAAkByB,GAAlB,CAAsBO,GAAtB,CAAJ,EAAgC;AAC5B,qBAAKlC,cAAL,GAAsB,KAAKE,YAAL,CAAkBgD,GAAlB,CAAsBhB,GAAtB,CAAtB;AACA,qBAAKlC,cAAL,CAAoB4C,IAApB;AACAtC,qBAAKC,EAAL,CAAQW,GAAR,CAAY,eAAe,KAAKjB,MAAhC;AACH,aAJD,MAIO;AACH,qBAAK8B,mBAAL,CAAyBG,GAAzB,EAA8B,IAA9B;AACH;AACJ;AACD;;;;;;;AArHA;AAAA;AAAA,kCA2HUA,GA3HV,EA2He;AACX,gBAAI,KAAKjC,MAAT,EAAiB,OADN,CACc;AACzB,gBAAI,KAAKG,WAAL,CAAiBuB,GAAjB,CAAqBO,GAArB,CAAJ,EAA+B;AAC3B,oBAAIiB,cAAc,KAAK/C,WAAL,CAAiB8C,GAAjB,CAAqBhB,GAArB,CAAlB;AACAiB,4BAAYP,IAAZ;AACH,aAHD,MAGO;AACH,qBAAKf,mBAAL,CAAyBK,GAAzB,EAA8B,IAA9B;AACH;AACJ;AACD;;;;;AApIA;AAAA;AAAA,oCAwIY;AACR,gBAAI,KAAKlC,cAAT,EAAyB;AACrB,qBAAKA,cAAL,CAAoBoD,IAApB;AACH;AACD,iBAAKpD,cAAL,GAAsB,IAAtB;AACH;AA7ID;AAAA;AAAA,kCA8IUqD,OA9IV,EA8ImB;AACf,iBAAKpD,MAAL,GAAcoD,OAAd;AACA/C,iBAAKC,EAAL,CAAQC,KAAR,CAAc8C,QAAd,CAAuBzD,cAAvB,EAAuC,KAAKI,MAA5C,EAAoD,KAApD;AACH;AAjJD;AAAA;AAAA,oCAkJY;AACR,mBAAO,KAAKA,MAAZ;AACH;AApJD;AAAA;AAAA,qCAsJY;AACR,gBAAIH,mBAAmB,IAAvB,EAA4B;AACxB,oBAAIyD,WAAWjD,KAAKC,EAAL,CAAQO,aAAR,CAAsBC,WAAtB,GAAoCC,MAApC,CAA2CwC,QAA1D;AACA,oBAAID,YAAY,QAAOA,QAAP,yCAAOA,QAAP,MAAoB,QAAhC,IAA4CA,SAASE,MAAT,GAAkB,CAAlE,EAAqE;AACjE3D,sCAAkByD,SAASG,SAASC,KAAKC,MAAL,KAAgBL,SAASE,MAAlC,CAAT,CAAlB;AACH,iBAFD,MAEK;AACD3D,sCAAkB,YAAlB;AACH;AACDA,kCAAkBQ,KAAK0B,UAAL,CAAgBC,QAAhB,GAA2BnC,eAA7C;AAEH;AACDmB,oBAAQC,GAAR,CAAY,WAAZ,EAAyBpB,eAAzB;AACA,mBAAOA,eAAP;AACH;AAnKD;AAAA;;;AAEA;;;;;;;AAFA,sCASqB;AACjB,gBAAI,CAACF,SAAL,EAAgB;AACZA,4BAAY,IAAIG,YAAJ,EAAZ;AACAH,0BAAUiE,IAAV;AACH;AACDvD,iBAAKC,EAAL,CAAQW,GAAR,CAAY,iBAAZ;AACA,mBAAOtB,SAAP;AACH;AAhBD;;AAAA;AAAA,GAAJ;;AAwKAkE,OAAOC,OAAP,GAAiBhE,YAAjB","file":"AudioManager.js","sourceRoot":"../../../../../../assets/scripts/game/model","sourcesContent":["/**\n * @file: AudioManager.getInstance().js\n * @description: 声音管理器\n * @author: lu ning\n * @email: luning@tuyoogame.com\n * @date: 2018-08-22\n */\n\nlet _instance = null; //! 单例，私有\nlet LOCAL_MUTE_KEY = 'ado_mute';\nlet curplaymusicurl = null;\nlet AudioManager = class{\n\n    /**\n     * @description\n     * @author lu ning\n     * @date 2018-08-22\n     * @static\n     * @returns\n     */\n    static getInstance() {\n        if (!_instance) {\n            _instance = new AudioManager();\n            _instance.init();\n        }\n        tywx.tt.log(\"getInstance ddd\");\n        return _instance;\n    }\n    init() {\n        this.bgMusicContext = null;\n        this.isMute = false; //* 是否静音\n        this.bgMusicCache = new Map();\n        this.soundsCache = new Map();\n        var tisMute = tywx.tt.Utils.loadItem(LOCAL_MUTE_KEY, false);\n        if (tisMute == \"false\") {\n            this.isMute = false;\n        }else{\n            this.isMute = true;\n        }\n    }\n    /**\n     * @description 资源预加载\n     * @author lu ning\n     * @date 2018-08-23\n     */\n    loadAudioRes() {\n        let sounds_config = tywx.tt.constants.SOUNDS;\n        let music_config = tywx.tt.configManager.getInstance().MUSICS;\n         \n        console.log(\"music_config \" + JSON.stringify(sounds_config));\n        let sound_keys = Reflect.ownKeys(sounds_config);\n        let music_keys = Reflect.ownKeys(music_config);\n        let self = this;\n        sound_keys.forEach(sound_key => {\n            if (!self.soundsCache.has(sounds_config[sound_key])) {\n                self.addSound2CacheByUrl(sounds_config[sound_key]);\n            }\n        });\n        music_keys.forEach(music_key => {\n            if (!self.bgMusicCache.has(music_config[music_key])) {\n                self.addMusic2CacheByUrl(tywx.SystemInfo.musicurl + music_config[music_key]);\n            }\n        });\n\n    }\n    /**\n     * @description 根据url添加声音资源到缓存池\n     * @author lu ning\n     * @date 2018-08-23\n     * @param {String} url 路径\n     * @param {boolean} [is_play=false] 是否播放\n     */\n    addSound2CacheByUrl(url, is_play = false) {\n        try {\n            let tmp_sound_context = wx.createInnerAudioContext();\n            tmp_sound_context.src = url;\n            tmp_sound_context.autoPlay = false;\n            tmp_sound_context.loop = false;\n            tmp_sound_context.volume = 1.0;\n            this.soundsCache.set(url, tmp_sound_context);\n            is_play && tmp_sound_context.play();\n        } catch (e) {\n            cc.error(`addSound2CacheByUrl error ${url}`);\n        }\n    }\n    /**\n     * @description 添加背景音乐到缓存池\n     * @author lu ning\n     * @date 2018-08-23\n     * @param {String} url 路径\n     * @param {boolean} [is_play=false] 是否播放\n     */\n    addMusic2CacheByUrl(url, is_play = false) {\n        console.log(\"music = \"+url);\n        try {\n            let tmp_music_context = wx.createInnerAudioContext();\n            tmp_music_context.src = url;\n            tmp_music_context.autoPlay = false;\n            tmp_music_context.loop = true; //* 所有的背景音乐都默认循环\n            tmp_music_context.volume = 1.0;\n            this.bgMusicCache.set(url, tmp_music_context);\n            if (is_play) {\n                tmp_music_context.play();\n                this.bgMusicContext = tmp_music_context;\n            }\n        } catch (e) {\n            cc.error(`addMusic2CacheByUrl error ${url}`);\n        }\n    }\n    /**\n     * * 播放背景音乐 \n     *\n     * @param {String} url 背景音乐url\n     * @param {boolean} [loop=true] 是否循环 废弃\n     * @param {number} [valume=1.0] 音量 废弃\n     */\n    playMusic(url, loop = true, volume = 1.0) {\n        tywx.tt.log(\"播放音乐22  = \" + this.isMute);\n        this.stopMusic();\n        if (this.isMute) return; //! 静音\n        if (this.bgMusicCache.has(url)) {\n            this.bgMusicContext = this.bgMusicCache.get(url);\n            this.bgMusicContext.play();\n            tywx.tt.log(\"播放音乐22  = \" + this.isMute);\n        } else {\n            this.addMusic2CacheByUrl(url, true);\n        }\n    }\n    /**\n     * @description 播放声效\n     * @author lu ning\n     * @date 2018-08-23\n     * @param {String} url\n     */\n    playSound(url) {\n        if (this.isMute) return; //! 静音\n        if (this.soundsCache.has(url)) {\n            let tmp_context = this.soundsCache.get(url);\n            tmp_context.play();\n        } else {\n            this.addSound2CacheByUrl(url, true);\n        }\n    }\n    /**\n     * * 停止播放背景音乐\n     *\n     */\n    stopMusic() {\n        if (this.bgMusicContext) {\n            this.bgMusicContext.stop();\n        }\n        this.bgMusicContext = null;\n    }\n    setIsMute(is_mute) {\n        this.isMute = is_mute;\n        tywx.tt.Utils.saveItem(LOCAL_MUTE_KEY, this.isMute, false);\n    }\n    getIsMute() {\n        return this.isMute;\n    }\n    \n    getBGMusic(){\n        if (curplaymusicurl == null){\n            let bgmusics = tywx.tt.configManager.getInstance().MUSICS.BG_MUSIC;\n            if (bgmusics && typeof(bgmusics) == \"object\" && bgmusics.length > 0) {\n                curplaymusicurl = bgmusics[parseInt(Math.random() * bgmusics.length)];\n            }else{\n                curplaymusicurl = \"ocean1.mp3\";\n            }\n            curplaymusicurl = tywx.SystemInfo.musicurl + curplaymusicurl;\n           \n        }\n        console.log(\"当前播放的背景音乐\", curplaymusicurl);\n        return curplaymusicurl;\n    }\n\n\n};\n\nmodule.exports = AudioManager;"]}