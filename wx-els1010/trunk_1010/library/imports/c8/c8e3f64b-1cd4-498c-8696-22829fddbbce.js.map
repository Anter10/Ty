{"version":3,"sources":["../../../../../../assets/scripts/game/cross_ad/assets/scripts/game/cross_ad/ads_manager.js"],"names":["TAG","node_path","list_path","blink_path","ads_manager","cc","Class","statics","ads_data","allevents","getTypeData","ads_type","ad_ids","ads","ttype","type","alliddata","allqzdata","idIndex","length","finddata","tadIndex","id","push","tywx","tt","error","typedata","blink_display","ads_qz","ads_subtype","JSON","stringify","addAdsNode","paraent","pos","tdata","waitadd","dataCall","listenCDNData","NotificationCenter","listen","events","TT_GET_CONFIG_SUCCESS","setData","listenADManagerData","log","EventType","GET_ADMANAGER_ICON_INFO_SUCCESS","AdmanagerCall","data","default","cross_ad","tindex","configManager","getInstance","auditing","parent","loader","loadRes","err","prefab","adsnode","instantiate","ads_script","getComponent","position","addChild","v2","module","exports"],"mappings":"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","file":"ads_manager.js","sourceRoot":"../../../../../../assets/scripts/game/cross_ad","sourcesContent":["let TAG = \"[game/cross_ad/ads_manager.js]\";\nlet node_path = \"prefabs/ads_node\";\nlet list_path = \"prefabs/ads_list\";\nlet blink_path = \"prefabs/ads_blink\";\nconst ads_manager = cc.Class({\n \n\n    statics: {\n        ads_data: null,\n        allevents:[],\n        /**\n         * @description 得到某种类型的交叉倒流数据\n         * @param {String} ads_type  交叉倒流的类型\n         */\n        getTypeData: function (ads_type) {\n            if (ads_manager.ads_data) {\n                if (ads_manager.ads_data[ads_type]) {\n                    const ad_ids = ads_manager.ads_data[ads_type].ads;\n                    const ttype = ads_manager.ads_data[ads_type].type;\n                    var alliddata = [];\n                    var allqzdata = [];\n                    var ads = ads_manager.ads_data.ads;\n                    for (var idIndex = 0; idIndex < ad_ids.length; idIndex++) {\n                        var finddata = null;\n                        for (var tadIndex = 0; tadIndex < ads.length; tadIndex++) {\n                            if (ttype == \"blink\") {\n                                if (ads[tadIndex].id == ad_ids[idIndex][0]) {\n                                    finddata = ads[tadIndex];\n                                    allqzdata.push(ad_ids[idIndex][1]);\n                                    break;\n                                }\n                            } else {\n                                if (ads[tadIndex].id == ad_ids[idIndex]) {\n                                    finddata = ads[tadIndex];\n                                    break;\n                                }\n                            }\n                        }\n                        if (finddata) {\n                            alliddata.push(finddata);\n                        } else {\n                            tywx.tt.error(TAG, \"没有ID \" + ad_ids[idIndex] + \"的倒流数据\");\n                        }\n                    }\n                    var typedata = {};\n                    typedata.type = ads_type;\n                    typedata.blink_display = ads_manager.ads_data.blink_display;\n                    typedata.ads_data = alliddata;\n                    typedata.ads_qz = allqzdata;\n                    typedata.ads_subtype = ttype;\n                    tywx.tt.error(TAG, \"节点数据s \" + JSON.stringify(typedata));\n                    return typedata;\n                } else {\n                    tywx.tt.error(TAG, \"没有\" + ads_type + \"这种类型的交叉倒流数据\");\n                }\n            } else {\n                tywx.tt.error(TAG, \"没有设置交叉倒流数据\");\n            }\n            return null;\n        },\n\n        addAdsNode: function (ads_type, paraent, pos) {\n            if (!ads_manager.ads_data) {\n                var tdata = {}\n                tdata.paraent = paraent;\n                tdata.pos = pos;\n                tdata.ads_type = ads_type;\n                ads_manager.allevents.push(tdata);\n                ads_manager.waitadd = true;\n                tywx.tt.error(TAG, \"没有设置交叉倒流数据1\");\n            } else {\n                ads_manager.paraent = paraent;\n                ads_manager.ads_type = ads_type;\n                ads_manager.pos = pos;\n                ads_manager.dataCall();\n            }\n        },\n        listenCDNData: function () {\n            tywx.NotificationCenter.listen(tywx.tt.events.TT_GET_CONFIG_SUCCESS, ads_manager.setData, ads_manager);\n        },\n\n        listenADManagerData: function () {\n            tywx.tt.log(\"开始监听Admanager倒流数据回调\");\n            tywx.NotificationCenter.listen(tywx.EventType.GET_ADMANAGER_ICON_INFO_SUCCESS, ads_manager.AdmanagerCall, ads_manager);\n        },\n\n        // \n        AdmanagerCall: function () {\n\n        },\n        /** \n         * @description 设置小程序的数据\n         * @param {Object} data CDN 上的网络配置数据\n         */\n        setData: function (data) {\n            ads_manager.ads_data = data.default.cross_ad;\n            tywx.tt.log(TAG, \"交叉倒流的数据  = \" + JSON.stringify(ads_manager.ads_data));\n            if (this.waitadd == true) {\n                this.waitadd = false;\n                for (var tindex = 0; tindex < ads_manager.allevents.length;  tindex++){\n                     let tdata = ads_manager.allevents[tindex];\n                     this.addAdsNode(tdata.ads_type, tdata.paraent, tdata.pos);\n                }\n                ads_manager.allevents = [];\n            }else{\n                ads_manager.allevents = [];\n            }\n        },\n\n        dataCall: function () {\n            if (ads_manager.ads_data && tywx.tt.configManager.getInstance().auditing == false) {\n                const parent = ads_manager.paraent;\n                const pos = ads_manager.pos;\n                const data = ads_manager.getTypeData(ads_manager.ads_type);\n                if (data.ads_subtype == \"banner\") {\n                    cc.loader.loadRes(node_path, (err, prefab) => {\n                        if (!err) {\n                            let adsnode = cc.instantiate(prefab);\n                            let ads_script = adsnode.getComponent('ads_node');\n                            ads_script.setData(data);\n                            adsnode.position = pos;\n                            tywx.tt.log(\"banner ads_manager.pos =\" + JSON.stringify(pos))\n                            parent.addChild(adsnode);\n                        }\n                    });\n                }else if(data.ads_subtype == \"list\"){\n                    cc.loader.loadRes(list_path, (err, prefab) => {\n                        if (!err) {\n                            let adsnode = cc.instantiate(prefab);\n                            let ads_script = adsnode.getComponent('ads_list');\n                            ads_script.setData(data);\n                            adsnode.position = cc.v2(0,0);\n                            parent.addChild(adsnode);\n                        }\n                    });\n                } else if (data.ads_subtype == \"blink\") {\n                    cc.loader.loadRes(blink_path, (err, prefab) => {\n                        if (!err) {\n                            let adsnode = cc.instantiate(prefab);\n                            let ads_script = adsnode.getComponent('ads_blink');\n                            ads_script.setData(data);\n                            tywx.tt.log(\"blink ads_manager.pos =\" + JSON.stringify(pos))\n                            adsnode.position = pos;\n                            parent.addChild(adsnode);\n                        }\n                    });\n                }\n            } else {\n                tywx.tt.error(TAG, \"没有交叉倒流的数据2\");\n            }\n        }\n    },\n \n});\n\n\nmodule.exports = ads_manager;"]}