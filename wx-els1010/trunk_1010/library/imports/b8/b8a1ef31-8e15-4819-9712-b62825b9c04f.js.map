{"version":3,"sources":["../../../../../../assets/scripts/game/model/assets/scripts/game/model/tt_model_board.js"],"names":["TAG","ModelBoard","board","w","tywx","tt","constants","BoardWidth","h","BoardHeight","score","willFillBlocks","previewConfigs","previewIndex","previewStat","clearRows","clearCols","emptyBlocks","Map","resetBoard","resetPreviewConfigs","clear","i","j","set","is_use_prop","Constants","block_configs","Blocks","ForceRestBlocks","forEach","push","e","config_idx","parseInt","length","Math","random","block_dis","BlockDis","is_can_fill","isPreviewCanFill","NotificationCenter","trigger","events","TT_REFRESH_PREVIEW_STAT","log","config_dis","self","r","line","c","rr","data","cc","center_row","center_col","config","ret","c_r","c_c","m_r","m_c","BlockMap","fill_blocks","need_fill_num","dis","b_r","b_c","warn","touch_idx","delete","TT_FILL_BOARD","refreshPreviewStat","outPutBoard","every","TT_RESET_PREVIEWS","tmp_col_fill","fill_num","TT_CLEAR_ROW","add_score","AddScore","TT_REFRESH_SCORE","row","col","shadow_blocks","clear_blocks","tmp_col","tmp_row","TT_CLEAR_HAMMER","module","exports"],"mappings":"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","file":"tt_model_board.js","sourceRoot":"../../../../../../assets/scripts/game/model","sourcesContent":["let TAG = '[tt.model.board]';\nlet ModelBoard = class{\n    constructor(){\n        this.board = [];\n        this.w     = tywx.tt.constants.BoardWidth;\n        this.h     = tywx.tt.constants.BoardHeight;\n        this.score = 0;\n        this.willFillBlocks = [];\n        this.previewConfigs = []; // * 预览配置\n        this.previewIndex = [];\n        this.previewStat = [];\n        this.clearRows = [];\n        this.clearCols = [];\n        this.emptyBlocks = new Map();\n    }\n    reset(){\n        this.score = 0;\n        this.resetBoard();\n        this.resetPreviewConfigs();\n    }\n    resetBoard(){\n        this.board = [];\n        this.emptyBlocks.clear();\n        for(let i = 0; i < this.h; ++i){\n            this.board[i] = [];\n            for(let j = 0; j < this.w; ++j){\n                this.board[i][j] = 0;\n                this.emptyBlocks.set(`${i}_${j}`,0);\n            }\n        }\n        \n    }\n\n    resetPreviewConfigs(is_use_prop = false){\n        // * reset preview config\n        this.previewConfigs = [];\n        this.previewStat = [];\n\n        let Constants = tywx.tt.constants;\n        let block_configs = Constants.Blocks;\n        if(is_use_prop){\n            block_configs = [];\n            Constants.ForceRestBlocks.forEach(e=>{\n                block_configs.push(Constants.Blocks[e]);\n            });\n        }\n        for(let i = 0; i < 3; ++i){\n            let config_idx = parseInt(block_configs.length * Math.random());\n            this.previewConfigs[i] = block_configs[config_idx];\n            if(!is_use_prop){\n                let block_dis = Constants.BlockDis[config_idx];\n                let is_can_fill = this.isPreviewCanFill(block_dis);\n                this.previewStat[i] = is_can_fill ? 1 : 0;\n            }\n            else{\n                //TODO: 特殊的默认都能填充，有需要再修改\n                this.previewStat[i] = 1;\n                config_idx = Constants.ForceRestBlocks[i];\n            }\n            this.previewIndex[i] = config_idx;\n        }\n        tywx.NotificationCenter.trigger(tywx.tt.events.TT_REFRESH_PREVIEW_STAT,null);\n    }\n    refreshPreviewStat(){\n        tywx.tt.log(TAG, 'refreshPreviewStat');\n        let Constants = tywx.tt.constants;\n        for(let i = 0; i < this.previewIndex.length; ++i){\n            let config_dis = Constants.BlockDis[this.previewIndex[i]];\n            let is_can_fill = this.isPreviewCanFill(config_dis);\n            this.previewStat[i] = is_can_fill ? 1 : 0;\n        }\n        tywx.NotificationCenter.trigger(tywx.tt.events.TT_REFRESH_PREVIEW_STAT,null);\n    }\n\n    isPreviewCanFill(block_dis){\n        let self = this;\n        for(let r = 0; r < this.board.length; ++r){\n            let line = this.board[r];\n            for(let c = 0; c < line.length; ++c){\n                block_dis.forEach(data=>{\n                    let [rr,cc] = [r + data[0], c + data[1]];\n                    if(rr >= 0 && rr < self.board.length \n                       && cc >> 0 && cc < line.length\n                       && self.board[r][c] > 0){\n                       return false;\n                    }\n                });\n            }\n        }\n        return true;\n    }\n\n    isCanFill(center_row,center_col, config){\n        let ret = false;\n        let [c_r, c_c] = [center_row, center_col];\n        let [m_r,m_c] = [tywx.tt.constants.BoardHeight, tywx.tt.constants.BoardWidth];\n        let BlockMap = tywx.tt.constants.BlockMap;\n        let fill_blocks = [];\n        let need_fill_num = 0;\n        for(let r = 0; r < config.length; ++r){\n            let line = config[r];\n            for(let c = 0; c < line.length; ++c){\n                let dis = BlockMap[r][c];\n                if(config[r][c] !== 0){\n                    let [b_r,b_c] = [c_r + dis[1],c_c + dis[0]];\n                    if(b_r >= 0\n                    && b_r < m_r\n                    && b_c >= 0\n                    && b_c < m_c\n                    && this.board[b_r][b_c] === 0){\n                        fill_blocks.push([b_r, b_c, config[r][c]]);\n                    }\n                    need_fill_num++;\n                }\n            }\n        }\n        ret = fill_blocks.length === need_fill_num;\n        if(ret) this.willFillBlocks = fill_blocks;\n        else this.willFillBlocks = [];\n        tywx.tt.warn(TAG, 'isCanFill ',ret ? 'can fill' : 'can not fill');\n        return ret;\n    }\n\n    fillBaordByConfig(center_row, center_col, config, touch_idx){\n        tywx.tt.warn(TAG, 'start to fillBaord');\n        if(!this.willFillBlocks || this.willFillBlocks.length === 0){\n            tywx.tt.warn(TAG, `fillBoard error, this.willFillBlocks=${this.willFillBlocks}`);\n            return;\n        }\n        this.willFillBlocks.forEach(e=>{\n            let [r,c] = [e[0],e[1]];\n            if(this.board[r][c] === 0){\n                this.board[r][c] = e[2];\n                this.emptyBlocks.delete(`${r}_${c}`);\n            }\n            else{\n                tywx.tt.warn(TAG, `fillBoardByConfig error r=${r} c=${c}`);\n            }\n        });\n        tywx.NotificationCenter.trigger(tywx.tt.events.TT_FILL_BOARD,this.willFillBlocks);\n        this.willFillBlocks = [];\n        this.previewConfigs[touch_idx] = null;\n        this.refreshPreviewStat();\n        this.outPutBoard();\n        tywx.tt.warn(TAG, 'fillBaord end');\n    }\n    outPutBoard(){\n        for(let r = this.h - 1; r >= 0; --r){\n            let line = `Row:${r}===>`;\n            for(let c = 0; c < this.w; ++c){\n                line += this.board[r][c] + ',';\n            }\n            tywx.tt.log(TAG, line);\n        }\n    }\n\n    resetPreviews(){\n        if(this.previewConfigs.every(e=>e === null)){\n            // * reset preview\n            tywx.tt.log(TAG, 'reset previews');\n            this.resetPreviewConfigs();\n            tywx.NotificationCenter.trigger(tywx.tt.events.TT_RESET_PREVIEWS,null);\n        }\n    }\n\n    forseResetPreviews(){\n        tywx.tt.log(TAG, 'forseResetPreviews');\n        this.resetPreviewConfigs(true);\n        tywx.NotificationCenter.trigger(tywx.tt.events.TT_RESET_PREVIEWS,null);\n    }\n\n    checkClear(){\n        this.clearRows = [];\n        this.clearCols = [];\n        let tmp_col_fill = [];\n        for(let i = 0; i < this.w; ++i) tmp_col_fill.push(0);\n        for(let r = 0; r < this.board.length; ++r){\n            let line = this.board[r];\n            let fill_num = 0;\n            for(let c = 0; c < line.length; ++c){\n                if(this.board[r][c] >= 1) {\n                    tmp_col_fill[c]++;\n                    fill_num++;\n                }\n            }\n            if(fill_num === this.w){\n                this.clearRows.push(r);\n            }\n            tywx.tt.log(TAG, `row:${r},file_num=${fill_num}`)\n        }\n        for(let i = 0; i < tmp_col_fill.length; ++i){\n            if(tmp_col_fill[i] === this.h) this.clearCols.push(i);\n        }\n        if(this.clearCols.length > 0 || this.clearRows.length > 0){\n            tywx.NotificationCenter.trigger(tywx.tt.events.TT_CLEAR_ROW,null);            \n        }\n        tywx.tt.log(TAG, `clearRow:${this.clearRows},\\nclearCols:${this.clearCols}`);\n    }\n    \n    clearBlocks(){\n        //this.clearRows, this.clearCols\n        let self = this;\n        let add_score = 0;\n        this.clearRows.forEach(e=>{\n            for(let c = 0; c < self.w; ++c){\n                self.board[e][c] = 0;\n                add_score += tywx.tt.constants.AddScore;\n                self.emptyBlocks.set(`${e}_${c}`,0);\n            }\n        });\n        this.clearCols.forEach(e=>{\n            for(let r = 0; r < self.h; ++r){\n                self.board[r][e] = 0;\n                self.emptyBlocks.set(`${r}_${e}`,0);\n                add_score += tywx.tt.constants.AddScore;\n            }\n        });\n        this.score += add_score;\n        tywx.NotificationCenter.trigger(tywx.tt.events.TT_REFRESH_SCORE,null);\n        this.clearCols = [];\n        this.clearRows = [];\n    }\n\n    hammerClearByRowAndCol(row, col){\n        let shadow_blocks = [\n            [[-1,1],[0,1],[1,1]],\n            [[-1,0],[0,0],[1,0]],\n            [[-1,-1],[0,-1],[1,-1]]\n        ];\n        let clear_blocks = [];\n        for(let r = 0; r < 3; ++r){\n            for(let c = 0; c < 3; ++c){\n                let data = shadow_blocks[r][c];\n                let tmp_col = col + data[0];\n                let tmp_row = row + data[1];\n                if(tmp_col >= 0 && tmp_row >= 0 && tmp_col < this.w && tmp_row < this.h){\n                    if(this.board[tmp_row][tmp_col] > 0){\n                        this.board[tmp_row][tmp_col] = 0;\n                        this.emptyBlocks.set(`${tmp_row}_${tmp_col}`,0);\n                        clear_blocks.push([tmp_row,tmp_col]);\n                    }\n                }\n            }\n        }\n        if(clear_blocks.length > 0){\n            tywx.tt.log(TAG, 'hammerClearByRowAndCol:' + clear_blocks.length);\n            tywx.NotificationCenter.trigger(tywx.tt.events.TT_CLEAR_HAMMER, clear_blocks);\n        }\n    }\n\n\n    getPreviewConfigs(){\n        return this.previewConfigs;\n    }\n    \n    \n};\n\nmodule.exports = ModelBoard;"]}