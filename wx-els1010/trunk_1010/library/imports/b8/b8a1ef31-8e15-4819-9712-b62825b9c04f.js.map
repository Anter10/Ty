{"version":3,"sources":["../../../../../../assets/scripts/game/model/assets/scripts/game/model/tt_model_board.js"],"names":["TAG","ModelBoard","board","w","tywx","tt","constants","BoardWidth","h","BoardHeight","score","willFillBlocks","previewConfigs","previewIndex","previewStat","clearRows","clearCols","emptyBlocks","Map","resetBoard","resetPreviewConfigs","clear","i","j","set","is_use_prop","checkpreviewnumber","checkgameover","BoardView","checkPreviewActives","Constants","block_configs","Blocks","ForceRestBlocks","forEach","push","e","config_idx","parseInt","length","Math","random","block_dis","BlockDis","is_can_fill","isPreviewCanFill","log","NotificationCenter","trigger","events","TT_REFRESH_PREVIEW_STAT","refresh","config_dis","r","line","c","tmp_fill_length","fill_blocks","tmp_data","rr","cc","center_row","center_col","config","ret","c_r","c_c","m_r","m_c","BlockMap","need_fill_num","dis","b_r","b_c","warn","touch_idx","delete","TT_FILL_BOARD","HELP_ADD","outPutBoard","alle","every","TT_RESET_PREVIEWS","tmp_col_fill","fill_num","hasclear","TT_CLEAR_ROW","refreshPreviewStat","rows","cols","add_score","self","AddScore","cleardata","TT_REFRESH_SCORE","row","col","shadow_blocks","clear_blocks","data","tmp_col","tmp_row","TT_CLEAR_HAMMER","module","exports"],"mappings":"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","file":"tt_model_board.js","sourceRoot":"../../../../../../assets/scripts/game/model","sourcesContent":["let TAG = '[tt.model.board]';\nlet ModelBoard = class {\n    constructor() {\n        this.board = [];\n        this.w = tywx.tt.constants.BoardWidth;\n        this.h = tywx.tt.constants.BoardHeight;\n        this.score = 0;\n        this.willFillBlocks = [];\n        this.previewConfigs = []; // * 预览配置\n        this.previewIndex = [];\n        this.previewStat = [];\n        this.clearRows = [];\n        this.clearCols = [];\n        this.emptyBlocks = new Map();\n    }\n    reset() {\n        this.score = 0;\n        this.resetBoard();\n        this.resetPreviewConfigs();\n    }\n    resetBoard() {\n        this.board = [];\n        this.emptyBlocks.clear();\n        for (let i = 0; i < this.h; ++i) {\n            this.board[i] = [];\n            for (let j = 0; j < this.w; ++j) {\n                this.board[i][j] = 0;\n                this.emptyBlocks.set(`${i}_${j}`, 0);\n            }\n        }\n\n    }\n\n    resetPreviewConfigs(is_use_prop = false, checkpreviewnumber = false) {\n        // * reset preview config\n        this.previewConfigs = [];\n        this.previewStat = [];\n        let checkgameover = true;\n        if (checkpreviewnumber){\n            if (tywx.tt.BoardView.checkPreviewActives() == 0) {\n                checkgameover = false;\n            }\n        }\n        let Constants = tywx.tt.constants;\n        let block_configs = Constants.Blocks;\n        if (is_use_prop) {\n            block_configs = [];\n            Constants.ForceRestBlocks.forEach(e => {\n                block_configs.push(Constants.Blocks[e]);\n            });\n        }\n        for (let i = 0; i < 3; ++i) {\n            let config_idx = parseInt(block_configs.length * Math.random());\n            this.previewConfigs[i] = block_configs[config_idx];\n            if (!is_use_prop) {\n                let block_dis = Constants.BlockDis[config_idx];\n                let is_can_fill = this.isPreviewCanFill(block_dis);\n                this.previewStat[i] = is_can_fill ? 1 : 0;\n            } else {\n                //TODO: 特殊的默认都能填充，有需要再修改\n                this.previewStat[i] = 1;\n                config_idx = Constants.ForceRestBlocks[i];\n                let block_dis = Constants.BlockDis[config_idx];\n                let is_can_fill = this.isPreviewCanFill(block_dis);\n                this.previewStat[i] = is_can_fill ? 1 : 0;\n            }\n            this.previewIndex[i] = config_idx;\n        }\n        tywx.tt.log(\"出发了gameover 检测事件 tt_ model_bord 69 行 是否需要检测 = \", checkgameover);\n        if (checkgameover){\n           tywx.NotificationCenter.trigger(tywx.tt.events.TT_REFRESH_PREVIEW_STAT, null);\n        }\n    }\n\n    refreshPreviewStat(refresh) {\n        tywx.tt.log(TAG, 'refreshPreviewStat');\n        let Constants = tywx.tt.constants;\n        for (let i = 0; i < this.previewIndex.length; ++i) {\n            let config_dis = Constants.BlockDis[this.previewIndex[i]];\n            let is_can_fill = this.isPreviewCanFill(config_dis);\n            if (!this.previewConfigs[i]) is_can_fill = false;\n            this.previewStat[i] = is_can_fill ? 1 : 0;\n            tywx.tt.log(TAG, 'refreshPreviewStat', `idx:${i},stat:${this.previewStat[i]}`);\n        }\n        tywx.tt.log(\"出发了gameover 检测事件 tt_ model_bord 79 行\" + refresh);\n        if (!refresh) {\n            tywx.NotificationCenter.trigger(tywx.tt.events.TT_REFRESH_PREVIEW_STAT, null);\n        }\n    }\n\n    isPreviewCanFill(block_dis) {\n        for (let r = 0; r < this.board.length; ++r) {\n            let line = this.board[r];\n            for (let c = 0; c < line.length; ++c) {\n                let tmp_fill_length = 0;\n                let fill_blocks = [];\n                for (let i = 0; i < block_dis.length; i++) {\n                    let tmp_data = block_dis[i];\n                    let [rr, cc] = [r + tmp_data[0], c + tmp_data[1]];\n                    if (rr >= 0 && rr < this.h &&\n                        cc >= 0 && cc < this.w &&\n                        this.board[rr][cc] <= 0) {\n                        tmp_fill_length++;\n                        fill_blocks.push([rr, cc]);\n                    }\n                }\n                if (tmp_fill_length === block_dis.length) {\n                    tywx.tt.log(TAG, 'isPreviewCanFill');\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    isCanFill(center_row, center_col, config) {\n        let ret = false;\n        let [c_r, c_c] = [center_row, center_col];\n        let [m_r, m_c] = [tywx.tt.constants.BoardHeight, tywx.tt.constants.BoardWidth];\n        let BlockMap = tywx.tt.constants.BlockMap;\n        let fill_blocks = [];\n        let need_fill_num = 0;\n        for (let r = 0; r < config.length; ++r) {\n            let line = config[r];\n            for (let c = 0; c < line.length; ++c) {\n                let dis = BlockMap[r][c];\n                if (config[r][c] !== 0) {\n                    let [b_r, b_c] = [c_r + dis[1], c_c + dis[0]];\n                    if (b_r >= 0 &&\n                        b_r < m_r &&\n                        b_c >= 0 &&\n                        b_c < m_c &&\n                        this.board[b_r][b_c] === 0) {\n                        fill_blocks.push([b_r, b_c, config[r][c]]);\n                    }\n                    need_fill_num++;\n                }\n            }\n        }\n        ret = fill_blocks.length === need_fill_num;\n        if (ret) this.willFillBlocks = fill_blocks;\n        else this.willFillBlocks = [];\n        tywx.tt.warn(TAG, 'isCanFill ', ret ? 'can fill' : 'can not fill');\n        return ret;\n    }\n\n    fillBaordByConfig(center_row, center_col, config, touch_idx) {\n        tywx.tt.warn(TAG, 'start to fillBaord' + touch_idx);\n        if (!this.willFillBlocks || this.willFillBlocks.length === 0) {\n            tywx.tt.warn(TAG, `fillBoard error, this.willFillBlocks=${this.willFillBlocks}`);\n            return;\n        }\n        this.willFillBlocks.forEach(e => {\n            let [r, c] = [e[0], e[1]];\n            if (this.board[r][c] === 0) {\n                this.board[r][c] = e[2];\n                this.emptyBlocks.delete(`${r}_${c}`);\n            } else {\n                tywx.tt.warn(TAG, `fillBoardByConfig error r=${r} c=${c}`);\n            }\n        });\n        tywx.NotificationCenter.trigger(tywx.tt.events.TT_FILL_BOARD, this.willFillBlocks);\n        this.willFillBlocks = [];\n        tywx.NotificationCenter.trigger(tywx.tt.events.HELP_ADD, null);\n        this.previewConfigs[touch_idx] = null;\n        // this.refreshPreviewStat(true);\n        this.outPutBoard();\n        tywx.tt.warn(TAG, 'fillBaord end');\n    }\n\n\n\n    // 填充给定的格子\n    fillBord(alle) {\n        this.willFillBlocks = alle;\n        this.willFillBlocks.forEach(e => {\n            let [r, c] = [e[0], e[1]];\n            if (this.board[r][c] === 0) {\n                this.board[r][c] = e[2];\n                this.emptyBlocks.delete(`${r}_${c}`);\n            } else {\n                tywx.tt.warn(TAG, `fillBoardByConfig error r=${r} c=${c}`);\n            }\n        });\n        tywx.NotificationCenter.trigger(tywx.tt.events.TT_FILL_BOARD, this.willFillBlocks);\n        this.willFillBlocks = [];\n    }\n\n    outPutBoard() {\n        for (let r = this.h - 1; r >= 0; --r) {\n            let line = `Row:${r}===>`;\n            for (let c = 0; c < this.w; ++c) {\n                line += this.board[r][c] + ',';\n            }\n            tywx.tt.log(TAG, line);\n        }\n    }\n\n    resetPreviews(checkpreviewnumber) {\n        if (this.previewConfigs.every(e => e === null)) {\n            // * reset preview\n            tywx.tt.log(TAG, 'reset previews');\n            this.resetPreviewConfigs(false, checkpreviewnumber);\n            tywx.NotificationCenter.trigger(tywx.tt.events.TT_RESET_PREVIEWS, null);\n        }\n    }\n\n    forseResetPreviews() {\n        tywx.tt.log(TAG, 'forseResetPreviews');\n        this.resetPreviewConfigs(true);\n        tywx.NotificationCenter.trigger(tywx.tt.events.TT_RESET_PREVIEWS, null);\n    }\n\n    checkClear() {\n        this.clearRows = [];\n        this.clearCols = [];\n        let tmp_col_fill = [];\n        for (let i = 0; i < this.w; ++i) tmp_col_fill.push(0);\n        for (let r = 0; r < this.board.length; ++r) {\n            let line = this.board[r];\n            let fill_num = 0;\n            for (let c = 0; c < line.length; ++c) {\n                if (this.board[r][c] >= 1) {\n                    tmp_col_fill[c]++;\n                    fill_num++;\n                }\n            }\n            if (fill_num === this.w) {\n                this.clearRows.push(r);\n            }\n            tywx.tt.log(TAG, `row:${r},file_num=${fill_num}`)\n        }\n        for (let i = 0; i < tmp_col_fill.length; ++i) {\n            if (tmp_col_fill[i] === this.h) this.clearCols.push(i);\n        }\n        if (this.clearCols.length > 0 || this.clearRows.length > 0) {\n            this.hasclear = true;\n            tywx.NotificationCenter.trigger(tywx.tt.events.TT_CLEAR_ROW, null);\n        }else{\n            this.hasclear = false;\n            this.refreshPreviewStat();\n        }\n         \n        tywx.tt.log(TAG, `clearRow:${this.clearRows},\\nclearCols:${this.clearCols}`);\n    }\n    \n    getAddScoreByClear(rows, cols){\n           let add_score = 0;\n           var self = this;\n           rows.forEach(e => {\n               for (let c = 0; c < self.w; ++c) {\n                   add_score += tywx.tt.constants.AddScore;\n               }\n           });\n           cols.forEach(e => {\n               for (let r = 0; r < self.h; ++r) {\n                   add_score += tywx.tt.constants.AddScore;\n               }\n           });\n           return add_score;\n    }\n\n    clearBlocks() {\n        //this.clearRows, this.clearCols\n        let self = this;\n        let add_score = 0;\n        this.clearRows.forEach(e => {\n            for (let c = 0; c < self.w; ++c) {\n                self.board[e][c] = 0;\n                add_score += tywx.tt.constants.AddScore;\n                self.emptyBlocks.set(`${e}_${c}`, 0);\n            }\n        });\n        this.clearCols.forEach(e => {\n            for (let r = 0; r < self.h; ++r) {\n                self.board[r][e] = 0;\n                self.emptyBlocks.set(`${r}_${e}`, 0);\n                add_score += tywx.tt.constants.AddScore;\n            }\n        });\n\n        let cleardata = {};\n        cleardata.rows = this.clearRows;\n        cleardata.cols = this.clearCols;\n        // console.log(\"方块清空数据 = \"+JSON.stringify(cleardata));\n        tywx.NotificationCenter.trigger(tywx.tt.events.HELP_ADD, null);\n        this.score += add_score;\n        this.clearCols = [];\n        this.clearRows = [];\n        this.outPutBoard();\n        this.refreshPreviewStat();\n        tywx.tt.log(TAG, 'clearBlocks end');\n        tywx.NotificationCenter.trigger(tywx.tt.events.TT_REFRESH_SCORE, cleardata);\n    }\n\n    hammerClearByRowAndCol(row, col) {\n        let shadow_blocks = [\n            [\n                [-1, 1],\n                [0, 1],\n                [1, 1]\n            ],\n            [\n                [-1, 0],\n                [0, 0],\n                [1, 0]\n            ],\n            [\n                [-1, -1],\n                [0, -1],\n                [1, -1]\n            ]\n        ];\n        let clear_blocks = [];\n        for (let r = 0; r < 3; ++r) {\n            for (let c = 0; c < 3; ++c) {\n                let data = shadow_blocks[r][c];\n                let tmp_col = col + data[0];\n                let tmp_row = row + data[1];\n                if (tmp_col >= 0 && tmp_row >= 0 && tmp_col < this.w && tmp_row < this.h) {\n                    if (this.board[tmp_row][tmp_col] > 0) {\n                        this.board[tmp_row][tmp_col] = 0;\n                        this.emptyBlocks.set(`${tmp_row}_${tmp_col}`, 0);\n                        clear_blocks.push([tmp_row, tmp_col]);\n                    }\n                }\n            }\n        }\n        if (clear_blocks.length > 0) {\n            tywx.tt.log(TAG, 'hammerClearByRowAndCol:' + clear_blocks.length);\n            tywx.NotificationCenter.trigger(tywx.tt.events.TT_CLEAR_HAMMER, clear_blocks);\n        }\n    }\n\n\n    getPreviewConfigs() {\n        return this.previewConfigs;\n    }\n\n    /**\n     * 设置玩家的分数\n     * @param {Number} score 玩家的分数\n     */\n    setScore(score) {\n        this.score = score;\n        tywx.NotificationCenter.trigger(tywx.tt.events.TT_REFRESH_SCORE, null);\n    }\n\n\n};\n\nmodule.exports = ModelBoard;"]}