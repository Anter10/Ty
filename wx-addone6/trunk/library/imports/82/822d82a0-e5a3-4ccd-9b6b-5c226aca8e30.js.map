{"version":3,"sources":["../../../../../assets/Script/models/assets/Script/models/GeZiMask.js"],"names":["module","exports","id","parent","g","getAllgz","num","x","tywx","ado","Constants","GameCenterConfig","rowcellNumber","y","parseInt","from","step","reset","showMSG","console","log"],"mappings":";;;;;;AAAA;;;;AAICA,OAAOC,OAAP,GAAiB,UAASC,EAAT,EAAaC,MAAb,EAAoB;AAClC;AACA,QAAKD,EAAL,GAAcA,EAAd;AACA;AACA,QAAKC,MAAL,GAAcA,MAAd;AACA;AACA,OAAIC,IAAU,KAAKD,MAAL,CAAYE,QAAZ,GAAuBH,EAAvB,CAAd;AACA;AACA,QAAKI,GAAL,GAAaF,EAAEE,GAAf;AACA;AACA,QAAKC,CAAL,GAAS,KAAKL,EAAL,GAAUM,KAAKC,GAAL,CAASC,SAAT,CAAmBC,gBAAnB,CAAoCC,aAAvD;AACA;AACA,QAAKC,CAAL,GAASC,SAAS,KAAKZ,EAAL,GAAUM,KAAKC,GAAL,CAASC,SAAT,CAAmBC,gBAAnB,CAAoCC,aAAvD,CAAT;AACA;AACA,QAAKG,IAAL,GAAW,CAAE,CAAb;AACA;AACA,QAAKC,IAAL,GAAY,OAAZ;;AAEA;;;;;;;;;;;AAWA,QAAKC,KAAL,GAAa,YAAU;;AAEnB,UAAIb,IAAK,KAAKD,MAAL,CAAYE,QAAZ,GAAuB,KAAKH,EAA5B,CAAT;AACA;AACA,WAAKI,GAAL,GAAWF,EAAEE,GAAb;AACA,WAAKC,CAAL,GAAS,KAAKL,EAAL,GAAUM,KAAKC,GAAL,CAASC,SAAT,CAAmBC,gBAAnB,CAAoCC,aAAvD;AACA,WAAKC,CAAL,GAASC,SAAS,KAAKZ,EAAL,GAAUM,KAAKC,GAAL,CAASC,SAAT,CAAmBC,gBAAnB,CAAoCC,aAAvD,CAAT;AACA,WAAKG,IAAL,GAAW,CAAE,CAAb;AACA,WAAKC,IAAL,GAAY,OAAZ;AACH,IATD;AAUA,QAAKE,OAAL,GAAe,YAAU;AACrBC,cAAQC,GAAR,CAAY,eAAe,KAAKlB,EAApB,GAAyB,SAAzB,GAAqC,KAAKI,GAA1C,GAAgD,QAAhD,GAA2D,KAAKA,GAAhE,GAAsE,SAAtE,GAAkF,KAAKC,CAAvF,GAA2F,OAA3F,GAAqG,KAAKM,CAAtH;AACH,IAFD;AAIH,CA3CA","file":"GeZiMask.js","sourceRoot":"../../../../../assets/Script/models","sourcesContent":["/*\n   用于路径搜索的地图mask\n   created by gyc on 2018-08-01.\n*/\n module.exports = function(id, parent){\n    // maskID\n    this.id     = id;\n    // mask的父容器\n    this.parent = parent;\n    // 某个指定的格子\n    var g       = this.parent.getAllgz()[id];\n    // 显示的number\n    this.num   = g.num;\n    // 格子的行\n    this.x = this.id % tywx.ado.Constants.GameCenterConfig.rowcellNumber;\n    // 格子的列\n    this.y = parseInt(this.id / tywx.ado.Constants.GameCenterConfig.rowcellNumber);\n    // 从那个格子找到自己\n    this.from =- 1;\n    // 第几步找到自己\n    this.step = 9999999;\n\n    /*\n        调用: 每次连接结束的时候调用\n        功能: 重制mask的初始数据\n        参数: [\n           无\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    this.reset = function(){\n        \n        var g  = this.parent.getAllgz()[this.id];\n        // console.log(\"格子的ID = \"+this.id+g.num);\n        this.num = g.num;\n        this.x = this.id % tywx.ado.Constants.GameCenterConfig.rowcellNumber;\n        this.y = parseInt(this.id / tywx.ado.Constants.GameCenterConfig.rowcellNumber);\n        this.from =- 1;\n        this.step = 9999999;\n    };\n    this.showMSG = function(){\n        console.log(\"当前的格子ID = \" + this.id + \" num = \" + this.num + \" 格子显示 \" + this.num + \"格子的x = \" + this.x + \"格子的y \" + this.y);\n    };\n\n}"]}