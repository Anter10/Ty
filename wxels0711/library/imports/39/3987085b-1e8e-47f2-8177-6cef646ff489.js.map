{"version":3,"sources":["../../../../../assets/script/core/assets/script/core/grid.js"],"names":["nge","require","els","model","Class","ElsUtils","ELSEvent","ElsGrid","extend","ctor","mod","i","mcore","ElsCore","corecls","mtimer","ElsTimer","mstat","ElsStat","isActive","mQueue","mBlkDat","index","needdraw","pend_attack","setBmp","bmp","tmp_fill_idx","tmp_fill_idx_hole","tywx","NotificationCenter","trigger","ELS_EVENT_RESET_ZHUBAO_ANIMATION_POOL","ZONG","j","HENG","tmp_grid_idx","GRIDW","grid","push","mconf","isEndless","zhubao_map","Map","zhubao_config","getRandomZhuBaoConfig","console","log","self","deep","zhubao_keys","Object","keys","max","forEach","element","row_keys","useable_fill_idx","useable_fill_idx_hole","max_key","Math","min","parseInt","min_key","r","ti","th","shuffle","length","pcount","current_fill_idx","has","zhubao_key","get","value","zhubao_count","set","zhubao_max","t_i","t_j","tmp_idx","t_row","t_col","t_type","t_param","row","col","type","ELS_EVENT_ADD_ZHUBAO_ANIMATION","ELS_EVENT_REFRESH_ZHUBAO_COUNT","updateColHoleTop","setLevel","nandu","level","setBlkDat","bd","setQueue","queue","reset","tgrid","setup","playMusic","ELS_VOICE","CLEAR_MUSIC","ELS_EVENT_SHOW_MAGIC_ADD_EFFECT","clearRow","game_over","fall","endless_clear","cur_block","next_block","save_block","save_lock","cur_x","cur_y","cur_z","block_index","block_attack_index","game_result","fangcha","nextBlk","ai","issave","tou","_maxDAct","_maxRLAct","addScore","moveBlk","SET","MAXBLKQUEUE","calcFangCha","mode","ELS_MODE_SINGLE","next_attack","ELS_EVENT_SHOW_ICE_EFFECT","auto_attack_step","getAutoAttackStep","fullrows","attack","random","top_total","col_top","top_avg","t","isUserGiveup","giveup","curfangcha","step","prefangcha","abs","saveBlk","CLEAR","blktmp","clearThreeBottomLines","floor","clone","clearnBottomLinesByCount","count","clearnAllRows","callback","render","clearn_line_count","clearn_rows","clearn_idx","Timer","setTimer","cc","director","ELS_EVENT_SHOW_CLEARN_ROW_EFFECT","cb","idx","getstat","cancel","clear_lines","n","isZhubao","tmp_fill_value","current_value","params","x","y","ENDLESS_VALUES","GetZhuBaoAddScore","params2","ELS_EVENT_DELETE_ZHUBAO_ANIMATION","sinkCol","grids","col_list","c","loop_time","idx0","idx1","current","next","clearnTopGirdByCount","ct","sinkAllCol","checkClearnRow","isRowFull","combo","combo_total","combo_max","combo_current","fs","fi","ELS_MODE_AI","row_idx","ret","randomFillGrid","fill_num","datas","findFillHolePos","fillGridByIndex","getGridsPosByCol","getColHoles","cols_hole","cols_nohole","g","is_have_hole","cols","tmp","tmp_j","mc","holes","col_hole","ch","idx_i","idx_j","top_line","ich","DDOWN","REACH_BOTTOM","testDDown","gxs","gxe","is_refresh_zhubao","m","zhubao_arr","tmp_zhubao","ELS_EVENT_ENDLESS_ON_ZHUBAO_CHANGE","recycle","tdx","tdy","dir","fflag","LEFT","RIGHT","REACH_BORDER","cx","cy","cz","z","TURN_CW","ready_wending","WENDING","TURN_CCW","DOWN","isInGrid","NORMAL","gv","mv","READY_BOTTOM","cling_blocks","Point","isKO","target","line","spaceseed","forsingle","flowflag","Array","srand","Uint8Array","GRIDSIZE","is_player","rand","needUp","f","update","isEndlessLevelEnd","key","setFreezeStep","window","factory","exports","module","define","amd"],"mappings":"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","file":"grid.js","sourceRoot":"../../../../../assets/script/core","sourcesContent":["var nge = require(\"./engine.js\")\nvar els = require(\"./els.js\");\nvar model = require(\"./model.js\");\nvar Class = nge.Class;\nvar ElsUtils = require(\"./ElsUtils.js\");\nvar ELSEvent = require(\"./ElsEvents.js\");\n\n//玩家区域网格,关键变量,以及核心处理逻辑\nvar ElsGrid = Class.extend({\n    ctor: function (mod, i) {\n        this.mod = mod;\n        this.mcore = new model.ElsCore();\n        this.corecls = model.ElsCore;\n        this.mtimer = new model.ElsTimer();\n        this.mstat = new model.ElsStat();\n        this.isActive = false;\n        this.mQueue = null;\n        this.mBlkDat = null;\n        this.index = i;\n        this.needdraw = true;\n        this.pend_attack = false;\n\n    },\n\n    //用于冒险模式设置10x10地图\n    setBmp: function (bmp) {\n        let tmp_fill_idx = {}; // 临时存储填充打block_idx\n        let tmp_fill_idx_hole = {}; // 临时存储填充打block_idx\n        tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_RESET_ZHUBAO_ANIMATION_POOL, null);\n\n        for (var i = 0; i < els.ZONG; i++) {\n            for (var j = 0; j < els.HENG; j++) {\n                let tmp_grid_idx = i * els.GRIDW + 2 + j;\n                this.mcore.grid[tmp_grid_idx] = \n                    (i >= (els.ZONG - els.HENG)) ? (100 + bmp[i - (els.ZONG - els.HENG)][j]) : 0;\n                if (this.mcore.grid[tmp_grid_idx] === 100) {\n                    this.mcore.grid[tmp_grid_idx] = 0;\n                }\n                // 记录填充的节点\n                if(this.mcore.grid[tmp_grid_idx] > 100) {\n                    tmp_fill_idx[i] = tmp_fill_idx[i] || [];\n                    tmp_fill_idx[i].push([i,j]);\n                } else {\n                    tmp_fill_idx_hole[i] = tmp_fill_idx_hole[i] || [];\n                    tmp_fill_idx_hole[i].push([i,j]);\n                }\n            }\n        }\n        //@ENDLESS 给出来的图设置嵌入珠宝\n        if(this.mod.mconf.isEndless && this.index === 0) {\n            //无尽模式===>设置随机珠宝\n            let zhubao_map = new Map([['d1',112],['d2',113],['d3',114]]); // 配置文件宝石和本地宝石key的关系映射\n            let zhubao_config = this.mod.getRandomZhuBaoConfig();// 获取宝石配置，根据等级获取\n            console.log('无尽模式===>',zhubao_config,this.index);\n            let self = this;\n            if(zhubao_config !== -1){\n                let deep = zhubao_config.deep; // 从顶部开始出现的行数\n                let zhubao_keys = Object.keys(zhubao_config); // 配置文件中所有的属性名\n                let max = 0; // 总共有多少个珠宝\n                zhubao_keys.forEach(element => {\n                    if(element !== 'deep'){\n                        max += zhubao_config[element];\n                    }\n                });\n                console.log(max);\n                let row_keys = Object.keys(tmp_fill_idx); // 有填充的所有行,已经完成排序，默认从小到大\n                let useable_fill_idx = []; // 存放可以被填充的元素idx\n                let useable_fill_idx_hole = []; //空洞备用\n                let max_key = Math.min(parseInt(row_keys[0]) + deep - 1, els.ZONG-1);\n                let min_key = max_key - 2;\n                for(var r=min_key; r<=max_key; r++) {\n                    let ti = tmp_fill_idx[r];\n                    let th = tmp_fill_idx_hole[r];\n                    if(ti) useable_fill_idx.push(...ti);\n                    if(th) useable_fill_idx_hole.push(...th);\n                }\n                console.log(useable_fill_idx, useable_fill_idx_hole);\n                useable_fill_idx_hole = ElsUtils.shuffle(useable_fill_idx_hole);\n                if(useable_fill_idx.length < max) {\n                    console.log(`填充珠宝错误，可填充数量为${useable_fill_idx.length},需要填充${max}个珠宝。`);\n                    let pcount = max - useable_fill_idx.length;\n                    for(var i=0; i<pcount; i++) {\n                        useable_fill_idx.push(useable_fill_idx_hole[i]);\n                    }\n                }\n                // 打乱顺序\n                useable_fill_idx = ElsUtils.shuffle(useable_fill_idx);\n                let current_fill_idx = 0;\n                // 填充宝石\n                zhubao_keys.forEach(element => {\n                    if(zhubao_map.has(element)){\n                        let zhubao_key = zhubao_map.get(element);\n                        let value = zhubao_config[element];\n                        self.mcore.zhubao_count.set(zhubao_key,0); // 统计当前消除的数量\n                        self.mcore.zhubao_max.set(zhubao_key,value); // 记录每种道具产生的数量\n                        console.log(`init-zhubao====>zhubao_count:${self.mcore.zhubao_count},zhubao_max:${self.mcore.zhubao_max}`);\n                        for(let i = 0; i < value; i++){\n                            let t_i = useable_fill_idx[current_fill_idx][0];\n                            let t_j = useable_fill_idx[current_fill_idx][1];\n                            let tmp_idx = t_i * els.GRIDW + 2 + t_j;\n                            self.mcore.grid[tmp_idx] = zhubao_key;\n                            //* 添加珠宝动画\n                            let t_row = els.ZONG - t_i - 1;\n                            let t_col = t_j;\n                            let t_type = zhubao_key;\n                            let t_param = {row:t_row,col:t_col,type:t_type};\n                            tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_ADD_ZHUBAO_ANIMATION, t_param);\n                            current_fill_idx++;\n                        }\n                    }\n                });\n                tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_REFRESH_ZHUBAO_COUNT, null);\n            }\n            else{\n                console.log('grid/zhubao','Get zhubao config error.');\n            }\n        }\n        this.updateColHoleTop(2,11,false);\n    },\n\n    //用于AI模式设置难度\n    setLevel: function (nandu) {\n        this.mstat.level = nandu;\n    },\n\n    //设置方块类别，目前支持经典和非经典两种，参考block.h\n    setBlkDat: function (bd) {\n        this.mBlkDat = bd;\n    },\n\n    //设置方块序列\n    setQueue: function (queue) {\n        this.mQueue = queue;\n        console.log(\"mq in setqueue...\" + queue);\n    },\n\n    //重置数据，每局开始调用\n    reset: function () {\n        var tgrid = this; //必须用局部变量保存起来供回调时使用，回调时不能用this\n        this.mcore = new model.ElsCore();\n        this.mtimer = new model.ElsTimer();\n        this.mtimer.setup(\"next-block\", 0.8);\n        this.mtimer.setup(\"clear-row\", 0.3, function () {\n            if (0 == tgrid.index) {\n                tgrid.mod.playMusic(els.ELS_VOICE.CLEAR_MUSIC, false);\n                tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_SHOW_MAGIC_ADD_EFFECT,null);\n            }\n            tgrid.clearRow(false);\n            console.log('clear-row-end');\n        });\n        this.mtimer.setup(\"game-over\", 0.12, function () {\n            console.log(\"OVER\" + tgrid.index);\n            tgrid.mcore.game_over = true;\n            //if(tgrid.index==1) process.exit(1);\n        });\n        this.mtimer.setup(\"fall\", 0.01, function () { tgrid.fall(); });\n        this.mtimer.setup(\"combo\", 0.8);\n        this.mtimer.setup(\"attack\", 0.8);\n        this.mtimer.setup(\"endless-clear\", 1.5, function () {\n            this.mod.endless_clear = false;\n        });\n\n        //设置初始grid.边框置为200，限制方块活动范围\n        for (var i = 0; i < els.ZONG + 2; i++)\n            for (var j = 0; j < els.HENG + 4; j++)\n                this.mcore.grid[i * els.GRIDW + j] = 200;\n        for (var i = 0; i < els.ZONG; i++)\n            for (var j = 0; j < els.HENG; j++)\n                this.mcore.grid[i * els.GRIDW + 2 + j] = 0;\n\n        //初始化各种变量\n        this.mcore.cur_block = this.mQueue[0];\n        this.mcore.next_block = this.mQueue[1];\n        this.mcore.save_block = -1;\n        this.mcore.save_lock = false;\n        this.mcore.cur_x = 5;\n        this.mcore.cur_y = 0;\n        this.mcore.cur_z = 0;\n        this.mcore.game_over = false;\n        this.mcore.block_index = 0;\n        this.mcore.block_attack_index = 0; // 保存对加行操作的值\n        this.mcore.game_result = 0;\n\n        //计算初始col,hole,top\n        //UpdateColHoleTop(2, 11);\n\n        //用于判断用户是否主动放弃\n        this.fangcha = [];\n    },\n\n    //下一块\n    nextBlk: function (ai, issave) {\n        //console.log(\"NEXT>>>>>>>>\");\n        if (!ai) {\n            if (this.index == 0) {\n                this.mod.tou._maxDAct = 0;\n                this.mod.tou._maxRLAct = 0;\n            }\n            this.mstat.addScore(10);\n        }\n        this.mcore.block_index++;\n        this.mcore.cur_block = this.mcore.next_block;\n        if (!issave)\n            this.mtimer.trigger(\"next-block\", 0.8);\n        this.mcore.cur_x = 5;\n        this.mcore.cur_y = 0;\n        this.mcore.cur_z = 0;\n        this.moveBlk(els.SET, ai);\n        this.mcore.next_block = this.mQueue[(this.mcore.block_index + 1) % els.MAXBLKQUEUE];\n\n        if (!ai && this.index == 0) {\n            this.fangcha[this.mcore.block_index] = this.calcFangCha();\n        }\n        if (0 == this.index && this.mod.mconf.mode === els.ELS_MODE_SINGLE) {\n            if (this.mcore.next_attack >= 1) {\n                this.mcore.next_attack --;\n                tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_SHOW_ICE_EFFECT, this.mcore.next_attack);\n                console.log(this.mcore.next_attack, \"step , reset add attack\")\n                return;\n            }\n            //控制难度\n            var auto_attack_step = this.mod.getAutoAttackStep();\n            if (this.mcore.block_attack_index !== 0 && this.mcore.block_attack_index % auto_attack_step == 0) {\n                if (this.mcore.fullrows.length != 0) {\n                    this.pend_attack = true;\n                } else {\n                    this.attack(this, 1, parseInt(Math.random() * 10000), true);\n                    this.updateColHoleTop(2,11);\n                }\n            } else {\n                if (this.pend_attack) {\n                    this.attack(this, 1, parseInt(Math.random() * 10000), true);\n                    this.updateColHoleTop(2,11);\n                    this.pend_attack = false;\n                }\n            }\n        }\n        this.mcore.block_attack_index ++;\n    },\n\n    calcFangCha: function () {\n        //计算总空\n        var top_total = 0;\n        for (var i = 0; i < els.HENG; i++) {\n            top_total += this.mcore.col_top[i] * 10;\n        }\n\n        //计算平均行高,计算行高方差\n        var top_avg = top_total / els.HENG;\n        var fangcha = 0;\n        for (i = 0; i < els.HENG; i++) {\n            var t = this.mcore.col_top[i] * 10 - top_avg;\n            fangcha += (t * t);\n        }\n\n        return fangcha;\n    },\n\n    isUserGiveup: function () {\n        // 先计算一下方差,看看是不是用户自己放弃了\n        var giveup = false;\n\n        // 当前方差\n        var curfangcha = this.fangcha[this.fangcha.length - 1];\n        // 5步之前的方差\n        var step = 0;\n        if (this.fangcha.length > 5)\n            step = this.fangcha.length - 6;\n        var prefangcha = this.fangcha[step];\n        if (curfangcha > 13000 || Math.abs(curfangcha - prefangcha) > 7000)\n            giveup = true;\n\n        return giveup;\n    },\n\n    //暂存块,每次确认下落后才能再次存(save_lock)\n    saveBlk: function (ai) {\n        //if (!this.mcore.save_lock) {\n        if (true) {\n            this.mcore.save_lock = true;\n            this.moveBlk(els.CLEAR, ai);\n            if (this.mcore.save_block >= 0) {\n                var blktmp = this.mcore.cur_block;\n                this.mcore.cur_block = this.mcore.save_block;\n                this.mcore.save_block = blktmp;\n                this.mcore.cur_x = 5;\n                this.mcore.cur_y = 0;\n                this.mcore.cur_z = 0;\n                this.moveBlk(els.SET, ai);\n            } else {\n                this.mcore.save_block = this.mcore.cur_block;\n                this.nextBlk(ai, false);\n            }\n            //触发保存块动画\n            this.mtimer.save_block = 10;\n        }\n    },\n\n    //消除最底下三行\n    clearThreeBottomLines: function () {\n\n        if (this.index != 0) return;\n\n        for (var i = els.ZONG - 5; i < els.ZONG; i++) {\n            for (var j = 2; j < els.HENG + 2; j++) {\n                this.mcore.grid[i * els.GRIDW + j] = 101 + Math.floor(Math.random() * 1000) % 6;\n            }\n        }\n\n        this.mcore.fullrows = [16, 17, 18, 19, 20];\n        //this.clearRow(false);\n        this.mtimer.trigger(\"clear-row\", nge.clone(this.mcore.fullrows));\n\n    },\n    /**\n     * 消除最下面一行\n     * @param {int} count 需要消除的行数\n     */\n    clearnBottomLinesByCount: function(count){\n        console.log(`clearnBottomLinesByCount===>${count}`);\n        if (this.index !== 0) return;// 机器人没有这个操作\n\n        for (var i = els.ZONG - count; i < els.ZONG; i++) {\n            for (var j = 2; j < els.HENG + 2; j++) {\n                this.mcore.grid[i * els.GRIDW + j] = 101 + Math.floor(Math.random() * 1000) % 6;\n            }\n        }\n\n        this.mcore.fullrows = [];\n        for(let i = 20; i > 20 - count; i--) this.mcore.fullrows.push(i);\n        //this.clearRow(false);\n        this.mtimer.trigger(\"clear-row\", nge.clone(this.mcore.fullrows));\n    },\n    clearnAllRows: function(callback, render){\n        let self = this;\n        let clearn_line_count = 0;\n        let clearn_rows = [];\n        for (let i = 0; i < els.ZONG; i++) {\n            let clearn_idx = [];\n            for (var j = 0; j < els.HENG; j++) {\n                let tmp_idx = i * els.GRIDW + 2 + j;\n                if(this.mcore.grid[tmp_idx] > 100 && this.mcore.grid[tmp_idx] < 200){\n                    clearn_idx.push(tmp_idx);\n                }\n            }\n            if(clearn_idx.length > 0){\n                clearn_rows.push(i);\n            }\n            if(clearn_idx.length > 0){\n                clearn_line_count++;\n                tywx.Timer.setTimer(\n                    cc.director,\n                    ()=>{\n                        tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_SHOW_CLEARN_ROW_EFFECT,{\n                            row: els.ZONG - i - 1 ,\n                            cb: ()=>{\n                                console.log('clearnAllRows--cb', i,clearn_idx,clearn_line_count);\n                                clearn_idx.forEach(idx=>{\n                                    self.mcore.grid[idx] = 0;\n                                });\n                                clearn_line_count--;\n                                if(clearn_line_count === 0){\n                                    console.log('');\n                                    callback && callback();\n                                }\n                            }\n                        });\n                    },\n                    clearn_line_count * 0.1, 0, clearn_line_count * 0.1\n                );\n            }\n        }\n        if(clearn_rows.length > 0){\n            this.clearnBottomLinesByCount(1);\n        }\n    },\n\n    clearRow: function (ai) {\n        if (!ai) {\n            this.needdraw = true;\n            //console.log(\"CLEAR ROW\"+this.mcore.fullrows.length);\n            if (this.mtimer.getstat(\"game-over\")) {\n                //console.log(\"cancel over...\");\n                this.mtimer.cancel(\"game-over\");\n                this.mcore.game_over = false;\n            }\n        }\n\n        this.mstat.clear_lines += this.mcore.fullrows.length;\n        if (this.mcore.fullrows.length % 100) {\n            //@ENDLESS TODO: 无尽模式===> 判断消掉了珠宝\n            var i, j, n;\n            for (n = 0; n < this.mcore.fullrows.length % 100; n++) {\n                for (i = this.mcore.fullrows[n]; i >= 0; i--) {\n                    for (j = 0; j < els.HENG; j++) {\n                        if(this.index === 0){ //!非AI\n                            if(i === this.mcore.fullrows[n]){\n                                //* 判断是否有消除珠宝,只有这种情况下是真正的消除\n                                //* 其他情况下是塌陷\n                                let tmp_idx = i * els.GRIDW + j + 2;\n                                if(this.mod.mconf.isEndless && ElsUtils.isZhubao(this.mcore.grid[tmp_idx])){\n                                    //TODO: 珠宝被消除，更新珠宝数量\n                                    let tmp_fill_value = this.mcore.grid[tmp_idx];\n                                    let current_value = this.mcore.zhubao_count.get(tmp_fill_value);\n                                    current_value++;\n                                    this.mcore.zhubao_count.set(tmp_fill_value,current_value);\n                                    let params = {\n                                        x: els.ZONG - i - 1,\n                                        y: j,\n                                        type: tmp_fill_value\n                                    };\n                                    tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_REFRESH_ZHUBAO_COUNT,params);\n                                    this.mstat.addScore(els.ENDLESS_VALUES.GetZhuBaoAddScore);\n                                    let params2 = {\n                                        row: els.ZONG - i - 1,\n                                        col: j,\n                                        type: tmp_fill_value\n                                    };\n                                    tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_DELETE_ZHUBAO_ANIMATION,params2);\n                                }\n                            }\n                            else{\n                                // let tmp_idx = i * els.GRIDW + j + 2;\n                                // if(this.mod.mconf.isEndless && ElsUtils.isZhubao(this.mcore.grid[tmp_idx])){\n                                //     //TODO: 珠宝没有消除，位置发生变化\n                                //     let tmp_fill_value = this.mcore.grid[tmp_idx];\n                                //     // * 这里的位置是变化前的\n                                //     let params = {\n                                //         row: els.ZONG - i - 1, // * \n                                //         col: j,\n                                //         type: tmp_fill_value,\n                                //         is_down: true\n                                //     };\n                                //     tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_REFRESH_ZHUBAO_ANIMATION_POS,params);\n                                // }\n                            }\n                        }\n\n                        if (i) {\n                            if (this.mcore.grid[(i - 1) * els.GRIDW + j + 2] > 100 || this.mcore.grid[(i - 1) * els.GRIDW + j + 2] == 0) {\n                                if (!(this.mcore.grid[i * els.GRIDW + j + 2] < 10 && this.mcore.grid[i * els.GRIDW + j + 2] > 0)){\n                                    this.mcore.grid[i * els.GRIDW + j + 2] = this.mcore.grid[(i - 1) * els.GRIDW + j + 2];\n                                }\n                            } else if (!(this.mcore.grid[i * els.GRIDW + j + 2] < 10 && this.mcore.grid[i * els.GRIDW + j + 2] > 0)) {\n                                this.mcore.grid[i * els.GRIDW + j + 2] = 0;\n                            }\n                        } else {\n                            if (!(this.mcore.grid[i * els.GRIDW + j + 2] < 10 && this.mcore.grid[i * els.GRIDW + j + 2] > 0)){\n                                let tmp_idx = i * els.GRIDW + j + 2;\n                                this.mcore.grid[tmp_idx] = 0;\n                            }\n                        }\n                    }\n                }\n                this.mcore.fullrows[n] = 0;\n            }\n            this.updateColHoleTop(2, 11);\n        }\n        this.mcore.fullrows.length = 0;\n        //this.refreshZhuBaoCount();\n    },\n\n    /**\n     * 下沉指定列\n     * @param index 指定下沉到列\n     */\n    sinkCol: function (index) {\n        let grids = this.mcore.grid;\n        let col_list = [];\n        for (let c = 0; c < els.ZONG; c++) {\n            let idx = c * els.GRIDW + index + 2;\n            col_list.push(idx);\n        }\n        let loop_time = 0;\n        for (let i = 0; i < col_list.length; i++) {\n            if (this.mcore.grid[col_list[i]] !== 0) {\n                loop_time++;\n            }\n        }\n        for (let t = 0; t < loop_time; t++) {\n            for (let i = 0; i < col_list.length - 1; i++) {\n                let idx0 = col_list[i];\n                let idx1 = col_list[i + 1];\n                let current = grids[idx0];\n                if (current > 10) {\n                    let next = grids[idx1];\n                    if (next === 0) {\n                        [this.mcore.grid[idx0], this.mcore.grid[idx1]] = [this.mcore.grid[idx1], this.mcore.grid[idx0]];\n                        // if(this.mod.mconf.isEndless && ElsUtils.isZhubao(current)){\n                        //     // * 这里的位置是变化前的\n                        //     // ! 珠宝下沉\n                        //     let params = {\n                        //         row: els.ZONG - (idx0 - index - 2 ) / els.GRIDW - 1, // * \n                        //         col: index,\n                        //         type: current,\n                        //         is_down: true\n                        //     };\n                        //     tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_REFRESH_ZHUBAO_ANIMATION_POS,params);\n                        // }\n                    }\n                }\n            }\n        }\n        //console.log(index,col_list);\n    },\n    /**\n     * 清除每列的最高指定行数\n     */\n    clearnTopGirdByCount(){\n        let ct = this.mcore.col_top;\n        for(let i = 0; i < ct.length; i++){\n            let r = els.ZONG - ct[i];\n            let idx = r * els.GRIDW + i + 2;\n            console.log('clearnTopGirdByCount', r,idx, this.mcore.grid[idx]);\n            if(this.mcore.grid[idx] > 100 && this.mcore.grid[idx] !== 200){\n                //let tmp_idx = i * els.GRIDW + j + 2;\n                if(this.mod.mconf.isEndless && ElsUtils.isZhubao(this.mcore.grid[idx])){\n                    //TODO: 珠宝被消除，更新珠宝数量\n                    let tmp_fill_value = this.mcore.grid[idx];\n                    let current_value = this.mcore.zhubao_count.get(tmp_fill_value);\n                    current_value++;\n                    this.mcore.zhubao_count.set(tmp_fill_value,current_value);\n                    let params = {\n                        x: els.ZONG - r - 1,\n                        y: i,\n                        type: tmp_fill_value\n                    };\n                    tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_REFRESH_ZHUBAO_COUNT,params);\n                    this.mstat.addScore(els.ENDLESS_VALUES.GetZhuBaoAddScore);\n                    let params2 = {\n                        row: els.ZONG - r - 1,\n                        col: i,\n                        type: tmp_fill_value\n                    };\n                    tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_DELETE_ZHUBAO_ANIMATION,params2);\n                }\n                this.mcore.grid[idx] = 0;\n            }\n        }\n        this.updateColHoleTop(2, 11);\n    },\n\n    /**\n     * 下沉所有的列\n     */\n    sinkAllCol: function () {\n        for (let i = 0; i < els.ZONG; i++) {\n            this.sinkCol(i);\n        }\n\n        this.updateColHoleTop(2, 11);\n        //this.checkClearnRow(false);\n    },\n\n    checkClearnRow: function (ai) {\n        for (let i = 0; i < els.ZONG; i++) {\n            if (this.isRowFull(i)) {\n                this.mcore.fullrows[this.mcore.fullrows.length] = i;\n            }\n        }\n        console.log('checkClearnRow', this.mcore.fullrows.length);\n        //如果有满行，设置full_rows_count\n        if (this.mcore.fullrows.length > 0) {\n            if (!ai) {\n                //console.log(\"fullrows......\"+this.mcore.fullrows.length);\n                if (this.mtimer.getstat(\"game-over\")) {\n                    this.mtimer.cancel(\"game-over\");\n                    this.mcore.game_over = false;\n                }\n            }\n            this.mcore.combo++;\n            if (!ai) {\n                this.mcore.attack[0] = this.mcore.fullrows.length - 1;\n                if (this.mcore.combo >= 3) {\n                    this.mstat.combo_total += this.mcore.combo;\n                    if (this.mcore.combo > this.mstat.combo_max)\n                        this.mstat.combo_max = this.mcore.combo;\n                    this.mstat.combo_current = this.mcore.combo;\n                    this.mcore.attack[0]++; // 如果连击数大于等于3   再给别人加一行\n                    this.mtimer.trigger(\"combo\", this.mcore.combo);\n                    this.mstat.addScore(this.mcore.combo * 100);\n                }\n                this.mcore.attack[1] = this.mcore.block_index;\n                //this.mstat.clear_lines+=this.mcore.fullrows.length;\n                console.log(`CurrentClearLines===>${this.mstat.clear_lines}`);\n                var fs = [50, 150, 300, 500];\n                var fi = this.mcore.fullrows.length > 4 ? 3 : this.mcore.fullrows.length - 1;\n                this.mstat.addScore(fs[fi]);\n                this.mtimer.trigger(\"clear-row\", nge.clone(this.mcore.fullrows));\n                if (this.mconf.mode == els.ELS_MODE_AI)\n                    this.mstat.addScore(this.mcore.attack[0] * 10000);\n            }\n        } else {\n            this.mcore.combo = 0;\n            this.mstat.combo_current = 0;\n        }\n\n        this.updateColHoleTop(2,11);\n    },\n\n    isRowFull: function (row_idx) {\n        let ret = true;\n        for (let i = 0; i < els.HENG; i++) {\n            let idx = row_idx * els.GRIDW + i + 2;\n            if (this.mcore.grid[idx] < 100 || this.mcore.grid[idx] === 200) {\n                ret = false;\n                console.log('isRowFull==>', row_idx, i, idx, this.mcore.grid[idx]);\n                break;\n            }\n        }\n        return ret;\n    },\n\n    /**\n     * @param fill_num 填充的数量\n     */\n    randomFillGrid: function (fill_num) {\n        let datas = this.findFillHolePos(fill_num);\n        console.log('randomFillGrid ===> ',datas);\n        return datas;\n    },\n\n    fillGridByIndex: function(index){\n        //TODO: 填充的block修改为随机的block\n        this.mcore.grid[index] = 105;\n    },\n\n    getGridsPosByCol: function(col){\n        let ret = [];\n        for(let i = 0; i < els.ZONG; i++){\n            let idx = i * els.GRIDW + col + 2;\n            ret.push(idx);\n        }\n        return ret;\n    },\n\n    getColHoles: function(){\n        let ret = [];\n        let cols_hole = [];\n        let cols_nohole = [];\n        let g = this.mcore.grid;\n        let is_have_hole = (cols)=>{\n            for(let i = 0; i < cols.length; i++){\n                let tmp = g[cols[i]];\n                if(tmp > 100){\n                    for(let j = i; j < cols.length; j++){\n                        let tmp_j = g[cols[j]];\n                        if(tmp_j === 0){\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        };\n        for(let c = 0; c < els.HENG; c++){\n            let datas = this.getGridsPosByCol(c);\n            if(is_have_hole(datas)){\n                cols_hole.push(c);\n            }\n            else{\n                cols_nohole.push(c);\n            }\n        }\n\n        ret.push(cols_hole);\n        ret.push(cols_nohole);\n        return ret;\n    },\n\n    findFillHolePos: function (count) {\n        //this.updateColHoleTop(2,11);\n        let [mc,g] = [this.mcore, this.mcore.grid];\n        let [cols_hole,cols_nohole,holes,ret] = [[],[],[],[]];\n        let cols = mc.col_hole; //this.getColHoles();\n        for(let i = 0; i < els.HENG; i++){\n            if(cols[i] === 0){\n                cols_nohole.push(i);\n            }\n            else{\n                cols_hole.push(i);\n            }\n        }\n        console.log('getColHoles',cols, cols_hole, cols_nohole);\n        //找到所有空洞加入holes\n        for (let ch of cols_hole) {\n            for(let i = 0; i < els.ZONG; i++){\n                let idx_i = i * els.GRIDW + ch + 2;\n                if(g[idx_i] > 100 && g[idx_i] !== 200){\n                    for(let j = i; j < els.ZONG; j++){\n                        let idx_j = j * els.GRIDW + ch + 2;\n                        if(g[idx_j] === 0) {\n                            holes[holes.length] = [ch,idx_j];\n                            console.log(ch,i,j);\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n        console.log('Holes===>',holes);\n        // 打乱顺序\n        holes = ElsUtils.shuffle(holes);\n\n        if (count <= holes.length) { //如果空洞足够\n            for (var i = 0; i < count; i++) {\n                holes[i][2] = true; //标志是需要填充的空洞\n                ret[ret.length] = holes[i];\n            }\n            console.log('hole enough ==>', ret);\n            return ret;\n        } else { //如果空洞不够\n            for (let i = 0; i < holes.length; i++) {\n                holes[i][2] = true; //标志需要填充的空洞\n                ret[ret.length] = holes[i];\n            }\n            //从没有空洞的列中挑选位置,从低往高找\n            for (let i = 0; i < els.ZONG; i++) {\n                var y = els.ZONG - i - 1;\n                //确保不在高于top_line的空间补块\n                if (y < els.ZONG - mc.top_line)\n                  return ret;\n                for (var ch in cols_nohole) {\n                  var ich = cols_nohole[ch];\n                  let idx = y * els.GRIDW + ich + 2 ;\n                  if (g[idx] === 0) {\n                    ret[ret.length] = [ch, idx, true]; //排除掉了最高列，可以实际补块\n                    if (ret.length >= count)\n                      return ret;\n                  }\n                }\n              }\n            return ret;\n        }\n    },\n\n    fall: function () {\n        do {\n            if (this.mcore.game_over) break;\n        } while (this.moveBlk(els.DDOWN, false) != els.REACH_BOTTOM);\n        this.nextBlk(false);\n        this.testDDown();\n    },\n\n    updateColHoleTop: function (gxs, gxe, is_refresh_zhubao = true) {\n        var m, n;\n        for (m = gxs; m <= gxe; m++) {\n            this.mcore.col_top[m - 2] = 0;\n            this.mcore.col_hole[m - 2] = 0;\n            for (n = els.ZONG; n > 0; n--) {\n                if (this.mcore.grid[(els.ZONG - n) * els.GRIDW + m] > 100) {\n                    this.mcore.col_top[m - 2] = n;\n                    break;\n                }\n            }\n            for (; n > 0; n--) {\n                if (this.mcore.grid[(els.ZONG - n) * els.GRIDW + m] == 0)\n                    this.mcore.col_hole[m - 2] += n;\n            }\n        }\n        this.mcore.top_line = 0;\n        for (m = 0; m < els.HENG; m++)\n            if (this.mcore.col_top[m] > this.mcore.top_line)\n                this.mcore.top_line = this.mcore.col_top[m];\n\n\n        //检测紧急模式\n\n        // this.mod.checkEmergency();\n       \n        if(is_refresh_zhubao){\n             //! 珠宝更新\n            let zhubao_arr = [];\n            if(this.mod.mconf.isEndless && this.index === 0){\n                for (var i = 0; i < els.ZONG; i++) {\n                    for (var j = 0; j < els.HENG; j++) {\n                        let tmp_grid_idx = i * els.GRIDW + 2 + j;\n                        if(ElsUtils.isZhubao(this.mcore.grid[tmp_grid_idx])){\n                            let tmp_zhubao = {\n                                type: this.mcore.grid[tmp_grid_idx],\n                                row: els.ZONG - i - 1,\n                                col: j,\n                            };\n                            zhubao_arr.push(tmp_zhubao);\n                        }\n                    }\n                }\n            }\n            if(zhubao_arr.length > 0){\n                tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_ENDLESS_ON_ZHUBAO_CHANGE, zhubao_arr);\n            }\n        }\n    },\n\n    //用于预先绘制下落到底部的虚影，用于更好的瞄准\n    testDDown: function () {\n        //return 0; //debug...\n        var x, y;\n        var tmp = this.mcore.clone();\n        while (this.moveBlk(els.DDOWN, true) != els.REACH_BOTTOM);\n        x = this.mcore.cur_x, y = this.mcore.cur_y;\n        this.mcore.recycle();\n        this.mcore = tmp.clone();\n        tmp.recycle();\n        this.mcore.tdx = x, this.mcore.tdy = y;\n        return 0;\n    },\n\n    //操作方块,更新Grid\n    moveBlk: function (dir, ai) {\n        var i, j, m, n, fflag;\n\n        if (this.mcore.game_over) {\n            if (dir == els.LEFT || dir == els.RIGHT)\n                return els.REACH_BORDER;\n            else\n                return els.REACH_BOTTOM;\n        }\n\n        if (!ai)\n            this.needdraw = true;\n\n        var type = this.mcore.cur_block;\n        var cx = this.mcore.cur_x;\n        var cy = this.mcore.cur_y;\n        var cz = this.mcore.cur_z;\n        var x = 0,\n            y = 0,\n            z = 0;\n\n        switch (dir) {\n            case els.TURN_CW:\n                x = cx;\n                y = cy;\n                z = (cz + 5) % 4;\n                this.mtimer.ready_wending = els.WENDING;\n                break;\n            case els.TURN_CCW:\n                x = cx;\n                y = cy;\n                z = (cz + 3) % 4;\n                this.mtimer.ready_wending = els.WENDING;\n                break;\n            case els.DOWN:\n            case els.DDOWN:\n                x = cx, y = cy + 1, z = cz;\n                break;\n            case els.LEFT:\n                x = cx - 1, y = cy, z = cz;\n                this.mtimer.ready_wending = els.WENDING;\n                break;\n            case els.RIGHT:\n                x = cx + 1, y = cy, z = cz;\n                this.mtimer.ready_wending = els.WENDING;\n                break;\n            case els.SET:\n                x = cx, y = cy, z = cz;\n                break;\n            case els.CLEAR:\n                x = cx, y = cy, z = cz;\n                break;\n        }\n\n        //不稳定块置0,100以上为已经下落稳定的块\n        for (i = 0; i < 4; i++)\n            for (j = 0; j < 4; j++)\n                if (this.isInGrid(cy + i, cx + j) && this.mcore.grid[(cy + i) * els.GRIDW + cx + j] < 100)\n                    this.mcore.grid[(cy + i) * els.GRIDW + cx + j] = 0;\n\n        if (dir == els.CLEAR) return els.NORMAL; //清除漂浮的块\n\n        for (i = 0; i < 4; i++) {\n            for (j = 0; j < 4; j++) {\n                //检测到了碰撞,可能是到底,到边,或者遇到了别的块,无法下落\n                if (this.mcore.grid[(y + i) * els.GRIDW + x + j] && this.mBlkDat[type][z][i * 4 + j]) {\n                    var gv = this.mcore.grid[(y + i) * els.GRIDW + x + j];\n                    var mv = this.mBlkDat[type][z][i * 4 + j];\n                    //if(!ai) console.log(\"CCC\"+this.index+\"..y+i=\"+(y+i)+\" x+j=\"+(x+j)+\" type=\"+type+\" z=\"+z+\" i=\"+i+\" j=\"+j+\" gv=\"+gv+\" mv=\"+mv);\n                    if (dir == els.DOWN || dir == els.DDOWN) {\n                        if (dir == els.DOWN) {\n                            //普通下落（非直落）还没粘住的情况\n                            if (this.mtimer.ready_wending >= 0) {\n                                //触发UpdateELS开始对ready_wending计数\n                                if (this.mtimer.ready_wending == els.WENDING)\n                                    this.mtimer.ready_wending--;\n                                for (m = 0; m < 4; m++) {\n                                    for (n = 0; n < 4; n++) {\n                                        if (this.isInGrid(cy + m, cx + n) && this.mBlkDat[type][z][m * 4 + n])\n                                            this.mcore.grid[(cy + m) * els.GRIDW + cx + n] = this.mBlkDat[type][z][m * 4 + n];\n                                    }\n                                }\n                                return els.READY_BOTTOM;\n                            } else {\n                                this.mtimer.ready_wending = els.WENDING;\n                            }\n                        }\n\n                        //加100设置为稳定块，并统计需要显示粘住光晕的块位置\n                        if (!ai) {\n                            this.mcore.cling_blocks.length = 0;\n                        }\n                        for (m = 0; m < 4; m++) {\n                            for (n = 0; n < 4; n++) {\n                                if (this.isInGrid(cy + m, cx + n) && this.mBlkDat[type][z][m * 4 + n]) {\n                                    this.mcore.grid[(cy + m) * els.GRIDW + cx + n] = 100 + this.mBlkDat[type][z][m * 4 + n]; //加100,置为稳定块\n                                    if (!ai) {\n                                        if (this.mcore.grid[(cy + m) * els.GRIDW + cx + n] != 100) {\n                                            //纪录下需要显示“粘住光晕”的块坐标及个数\n                                            this.mcore.cling_blocks[this.mcore.cling_blocks.length] = new nge.Point(cx + n - 2, cy + m);\n                                            //this->GenItem(idx, gp, cy+m, cx+n); //随机产生道具\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        //触发粘住光晕动画...\n                        //CALLUI cling block animation...\n                        /*if (m_pElSModel->mcore[idx].cling_count>0 && idx==0) \n                          m_pPlayAreas[idx]->New_lighting();*/\n\n                        this.updateColHoleTop(2, 11, false);\n\n                        //标注满行，检测满行信息 标记到fullrow里 同时标记full_rows_count\n                        //扫描判断满行,放入fullrows数组\n                        for (m = 0; m < 4; m++) {\n                            fflag = true;\n                            for (n = 0; n < els.HENG; n++) {\n                                if (this.isInGrid(cy + m, n + 2)) {\n                                    if (this.mcore.grid[(cy + m) * els.GRIDW + n + 2] < 100 || this.mcore.grid[(cy + m) * els.GRIDW + n + 2] == 200) {\n                                        fflag = false;\n                                        break;\n                                    }\n                                }\n                            }\n                            if (fflag) {\n                                this.mcore.fullrows[this.mcore.fullrows.length] = cy + m;\n                            }\n                        }\n                        //如果有满行，设置full_rows_count\n                        if (this.mcore.fullrows.length > 0) {\n                            if (!ai) {\n                                //console.log(\"fullrows......\"+this.mcore.fullrows.length);\n                                if (this.mtimer.getstat(\"game-over\")) {\n                                    this.mtimer.cancel(\"game-over\");\n                                    this.mcore.game_over = false;\n                                }\n                            }\n                            this.mcore.combo++;\n                            if (!ai) {\n                                this.mcore.attack[0] = this.mcore.fullrows.length - 1;\n                                if (this.mcore.combo >= 3) {\n                                    this.mstat.combo_total += this.mcore.combo;\n                                    if (this.mcore.combo > this.mstat.combo_max)\n                                        this.mstat.combo_max = this.mcore.combo;\n                                    this.mstat.combo_current = this.mcore.combo;\n                                    this.mcore.attack[0]++; // 如果连击数大于等于3   再给别人加一行\n                                    this.mtimer.trigger(\"combo\", this.mcore.combo);\n                                    this.mstat.addScore(this.mcore.combo * 100);\n                                }\n                                this.mcore.attack[1] = this.mcore.block_index;\n                                //this.mstat.clear_lines+=this.mcore.fullrows.length;\n                                console.log(`CurrentClearLines===>${this.mstat.clear_lines}`);\n                                var fs = [50, 150, 300, 500];\n                                var fi = this.mcore.fullrows.length > 4 ? 3 : this.mcore.fullrows.length - 1;\n                                this.mstat.addScore(fs[fi]);\n                                this.mtimer.trigger(\"clear-row\", nge.clone(this.mcore.fullrows));\n                                if (this.mconf.mode == els.ELS_MODE_AI)\n                                    this.mstat.addScore(this.mcore.attack[0] * 10000);\n                            }\n                        } else {\n                            this.mcore.combo = 0;\n                            this.mstat.combo_current = 0;\n                        }\n                        //进入了下一块处理,可以保存块了\n                        this.mcore.save_lock = false;\n                        return els.REACH_BOTTOM;\n                    } else if (dir == els.LEFT || dir == els.RIGHT) {\n                        for (i = 0; i < 4; i++) {\n                            for (j = 0; j < 4; j++) {\n                                if (this.isInGrid(cy + i, cx + j) && this.mcore.grid[(cy + i) * els.GRIDW + cx + j] == 0)\n                                    this.mcore.grid[(cy + i) * els.GRIDW + cx + j] += this.mBlkDat[type][z][i * 4 + j];\n                            }\n                        }\n                        return els.REACH_BORDER;\n                    } else {\n                        if (dir == els.TURN_CW || dir == els.TURN_CCW) {\n                            for (i = 0; i < 4; i++)\n                                for (j = 0; j < 4; j++) {\n                                    if (this.isInGrid(y + i, x + j) && this.mcore.grid[(y + i) * els.GRIDW + x + j] == 0)\n                                        this.mcore.grid[(y + i) * els.GRIDW + x + j] += this.mBlkDat[type][cz][i * 4 + j];\n                                }\n                            return els.REACH_BORDER;\n                        }\n                        //调用NextBlk会调用MoveBlk(SET),\n                        //此时方块刚出来就有碰撞表明Game Over了\n                        /// Modify by lu ning. 14:44:47 2018/07/22\n                        /// 这里要做特殊处理，如果正在消除，那么，不应该触发game-over,\n                        /// 因为，消除完成后，可能游戏不会结束\n                        if (dir == els.SET && !ai && this.mcore.fullrows.length === 0) {\n                            //console.log(\"TRIGGER OVER\");\n                            this.mstat.isKO = true;\n                            this.mtimer.trigger(\"game-over\", 0.12);\n                        }\n                        return els.NORMAL;\n                    }\n                }\n            }\n        }\n        //更新真正的Grid,置当前x,y,z,返回\n        for (i = 0; i < 4; i++) {\n            for (j = 0; j < 4; j++) {\n                if (this.isInGrid(y + i, x + j)) {\n                    this.mcore.grid[(y + i) * els.GRIDW + x + j] += this.mBlkDat[type][z][i * 4 + j];\n                }\n            }\n        }\n        this.mcore.cur_x = x;\n        this.mcore.cur_y = y;\n        this.mcore.cur_z = z;\n        if (!ai)\n            this.testDDown();\n        return els.NORMAL;\n    },\n\n    isInGrid: function (x, y) {\n        return ((x >= 0 && x < els.ZONG + 2) && (y >= 0 && y < els.HENG + 4));\n    },\n\n    //攻击对方\n    attack: function (target, line, spaceseed, forsingle) {\n        var i, j, flowflag = 0;\n        var tgrid = [];\n        for (i = 0; i < (els.ZONG + 2); i++) tgrid[i] = new Array(els.HENG + 4);\n\n        if (target.mcore.game_over || line <= 0) return;\n        if (!forsingle) {\n            if (target.mtimer.getstat(\"clear-row\")) target.mtimer.cancel(\"clear-row\");\n            if (target.mtimer.getstat(\"fall\")) target.mtimer.cancel(\"fall\");\n        }\n\n        nge.srand(spaceseed);\n        tgrid = new Uint8Array(els.GRIDSIZE);\n        tgrid.set(target.mcore.grid);\n        let is_player = target.index === 0;\n        for (i = 0; i < els.ZONG - line; i++) {\n            for (j = 0; j < els.HENG; j++) {\n                // if(is_player && ElsUtils.isZhubao(tgrid[i * els.GRIDW + 2 + j])){\n                //     //! 珠宝特效向上移动\n                //     //TODO: 珠宝没有消除，位置发生变化\n                //     let tmp_fill_value = tgrid[i * els.GRIDW + 2 + j];\n                //     // * 这里的位置是变化前的\n                //     let params = {\n                //         row: els.ZONG - i - 1, // * \n                //         col: j,\n                //         type: tmp_fill_value,\n                //         is_down: false\n                //     };\n                //     tywx.NotificationCenter.trigger(ELSEvent.ELS_EVENT_REFRESH_ZHUBAO_ANIMATION_POS,params);\n                \n                // }\n                tgrid[i * els.GRIDW + 2 + j] = target.mcore.grid[(i + line) * els.GRIDW + 2 + j];\n                if (tgrid[i * els.GRIDW + 2 + j] < 10 && tgrid[i * els.GRIDW + 2 + j] > 0) {\n                    flowflag = 1;\n                    tgrid[i * els.GRIDW + 2 + j] = 0;\n                }\n            }\n        }\n\n        //if(!this.mod.mconf.isEndless) {\n        if(true) {\n            for (i = 0; i < line; i++) {\n                var r = nge.rand() % els.HENG;\n                for (j = 0; j < els.HENG; j++) {\n                    if (r == j) {\n                        tgrid[(els.ZONG - 1 - i) * els.GRIDW + 2 + j] = 0;\n                    } else {\n                        tgrid[(els.ZONG - 1 - i) * els.GRIDW + 2 + j] = 111;\n                    }\n                }\n            }\n        } else {\n            /*for (i = 0; i < line; i++) {\n                var el = this.mod.endless_line;\n                //var bi = els.ELSBMP[\"i\"+(parseInt(el/10)+4)];\n                var bj = bi[parseInt(el%10)];\n                for (j = 0; j < els.HENG; j++) {\n                    tgrid[(els.ZONG - 1 - i) * els.GRIDW + 2 + j] = bj[j]==0?0:100+bj[j];\n                }\n                this.mod.endless_line+=1;\n            }*/\n        }\n\n        target.mcore.grid = new Uint8Array(els.GRIDSIZE);\n        target.mcore.grid.set(tgrid);\n\n        if (flowflag) {\n            var x = target.mcore.cur_x;\n            var y = target.mcore.cur_y;\n            var z = target.mcore.cur_z;\n            var type = target.mcore.cur_block;\n            var needUp = false;\n            for (i = 0; i < 4; i++)\n                for (j = 0; j < 4; j++) {\n                    if (this.isInGrid(y + i, x + j)) {\n                        if (target.mcore.grid[(y + i) * els.GRIDW + x + j] && target.mBlkDat[type][z][i * 4 + j])\n                            needUp = true;\n                    }\n                }\n            if (needUp) {\n                //printf(\"ATTACK NEED UP CURRENT BLOCK!\\n\");\n                target.mcore.cur_y -= line;\n                y = target.mcore.cur_y;\n            }\n            for (i = 0; i < 4; i++)\n                for (j = 0; j < 4; j++) {\n                    if (this.isInGrid(y + i, x + j))\n                        target.mcore.grid[(y + i) * els.GRIDW + x + j] += target.mBlkDat[type][z][i * 4 + j];\n                }\n        }\n\n        for (i = 0; i < els.HENG; i++)\n            target.mcore.col_top[i] += line;\n\n        if (target.mcore.fullrows.length != 0) {\n            for (var f = 0; f < target.mcore.fullrows.length; f++)\n                target.mcore.fullrows[f] -= line;\n            //DumpELS(idx, \"ATTACK add fullrows!!!\");\n        }\n        //TODO:攻击影响col_hole\n    },\n\n    update: function () {\n        if (this.mtimer.ready_wending != els.WENDING) {\n            //if(this.index==0) console.log(\"UPDATE WENDING....\"+this.mtimer.ready_wending);\n            this.mtimer.ready_wending--;\n        }\n        this.mtimer.update();\n    },\n    /**\n     * 无尽模式小关卡是否结束\n     */\n    isEndlessLevelEnd: function(){\n        if(!this.mod.mconf.isEndless) return false;\n        let ret = true;\n        for(let  key of this.mcore.zhubao_max.keys()){\n            if(this.mcore.zhubao_count.has(key) && this.mcore.zhubao_max.get(key) !== this.mcore.zhubao_count.get(key)){\n                ret = false;\n                break;\n            }\n        }\n        return ret;\n    },\n\n    /**\n     * 冻结增加行 'step'步数后 重新计算\n     * \n     * @param {[type]} step [步数]\n     */\n    setFreezeStep: function(step) {\n        this.mcore.next_attack = this.mcore.next_attack > 0 ? this.mcore.next_attack : 0;\n        this.mcore.next_attack += step;\n    },\n});\n(function (window, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        window.ElsGrid = factory();\n    }\n})(this, function () {\n    return ElsGrid\n});\n"]}