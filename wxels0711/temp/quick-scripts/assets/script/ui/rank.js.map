{"version":3,"sources":["rank.js"],"names":["els","require","cc","Class","extends","Component","properties","sprOpenDataCanvasProxy","Sprite","sprRankChallengeSelected","Node","sprRankClassicSelected","scrollview","ScrollView","rank_cell","Prefab","giftBtns","gameBtns","endlessBtns","gift_sub_nodes_0","gift_sub_nodes_1","game_sub_nodes_0","game_sub_nodes_1","game_sub_nodes_2","onLoad","btns","btn_nodes","t_state","l_state","updateUI","self","forEach","items","index","item","_index","_t","_selectNode","_list","_type","node","active","top_btn_click","_btn","_data","console","log","parseInt","updateRank","left_btn_click","types","scrollToTop","_drawRankContentWithOpenDataCanvas","start","showMe","tywx","UIManager","game","gameNode","getComponent","beyondOpenData","isInWXChat","openDataContext","wx","getOpenDataContext","openDataCanvas","canvas","width","height","tex","Texture2D","proxySpriteFrame","SpriteFrame","texture","spriteFrame","sprite","hideMe","unscheduleAllCallbacks","drawCommand","postMessage","method","pageIndex","btnClose","removeFromParent","destroyAllChildren","removeAllChildren","destroy","_updateSubDomainCanvas","sharedCanvas","initWithElement","handleLoadedTexture","_refreshTexture","update","dt"],"mappings":"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","file":"rank.js","sourceRoot":"../../../../../assets/script/ui","sourcesContent":["var els = require(\"../core/els.js\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sprOpenDataCanvasProxy: cc.Sprite,\n        sprRankChallengeSelected: cc.Node,\n        sprRankClassicSelected: cc.Node,\n        scrollview: cc.ScrollView,\n\n        rank_cell: cc.Prefab,\n\n\n        giftBtns: [cc.Sprite], // 0:nomal 1:select 礼物\n        gameBtns: [cc.Sprite], // 0:nomal 1:select 游戏\n        endlessBtns: [cc.Sprite], // 0:nomal 1:select 无尽\n\n        gift_sub_nodes_0: [cc.Sprite], // 0: 土豪 \n        gift_sub_nodes_1: [cc.Sprite], // 1: 魅力\n\n        game_sub_nodes_0: [cc.Sprite], // 0: 无尽 \n        game_sub_nodes_1: [cc.Sprite], // 1: 闯关\n        game_sub_nodes_2: [cc.Sprite], // 2: 经典\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad: function() {\n        this.btns = [this.giftBtns, this.gameBtns];\n\n        this.btn_nodes = [\n            [this.gift_sub_nodes_0, this.gift_sub_nodes_1],\n            [this.game_sub_nodes_0, this.game_sub_nodes_1, this.game_sub_nodes_2]\n        ];\n\n        this.t_state = 0;\n        this.l_state = 0;\n\n        this.updateUI();\n        let self = this;\n        this.btn_nodes.forEach((items, index) => {\n            items.forEach((item, _index) => {\n                let _t = _index === 0;\n                self._selectNode(item, _t);\n            });\n        });\n    },\n\n    updateUI() {\n        let self = this;\n        this.btns.forEach((items, index) => {\n            let _t = index === self.t_state;\n            self._selectNode(items, _t);\n        });\n\n        this.btn_nodes.forEach((items, index) => {\n            if (index === self.t_state) {\n                items.forEach((item, _index) => {\n                    let _t = _index === self.l_state;\n                    self._selectNode(item, _t);\n                });\n            }\n        });\n    },\n\n    _selectNode(_list, _type) {\n        _list[0].node.active = !_type;\n        _list[1].node.active = _type;\n    },\n\n    top_btn_click(_btn, _data) {\n        console.log(_btn, _data);\n        this.t_state = parseInt(_data);\n        this.l_state = 0;\n        this.updateUI();\n        this.updateRank();\n    },\n\n    left_btn_click(_btn, _data) {\n        console.log(_btn, _data);\n        this.l_state = parseInt(_data);\n        this.updateUI();\n        this.updateRank();\n    },\n\n    updateRank() {\n        // TODO: 无尽排行 标识\n        let types = [\n            [\"ELS_SEND_PRIVE\", \"ELS_RECV_PRIVE\"],\n            [\"drawRankEndless\", \"drawRankChallenge\", \"drawRankClassic\"]\n        ];\n        if (this._type !== types[this.t_state][this.l_state]) {\n            this._type = types[this.t_state][this.l_state];\n            this.scrollview.scrollToTop(0, false);\n            this._drawRankContentWithOpenDataCanvas(this._type);\n        }\n    },\n\n    start() {\n        this.showMe();\n    },\n\n    showMe: function() {\n        tywx.UIManager.game.gameNode.getComponent(\"main\").beyondOpenData.active = false;\n        this.updateUI();\n        if (!tywx.isInWXChat)\n            return;\n        var openDataContext = wx.getOpenDataContext();\n        var openDataCanvas = openDataContext.canvas;\n        openDataCanvas.width = 550;\n        openDataCanvas.height = 1890;\n\n        this.tex = new cc.Texture2D();\n        this.proxySpriteFrame = new cc.SpriteFrame(this.texture);\n        var texture = this.tex;\n        var spriteFrame = this.proxySpriteFrame;\n        var sprite = this.sprOpenDataCanvasProxy;\n        this.scrollview.scrollToTop(0, false);\n        this.updateRank();\n    },\n\n    hideMe: function() {\n        this.unscheduleAllCallbacks();\n    },\n\n    _drawRankContentWithOpenDataCanvas: function(drawCommand) {\n        if (!tywx.isInWXChat)\n            return;\n        var self = this;\n\n        var openDataContext = wx.getOpenDataContext();\n        var openDataCanvas = openDataContext.canvas;\n        openDataContext.postMessage({\n            method: drawCommand,\n            pageIndex: 1\n        });\n    },\n\n    btnClose: function() {\n        this.node.active = false;\n        this._drawRankContentWithOpenDataCanvas(\"cleanOpenData\");\n        this.node.removeFromParent();\n        this.node.destroyAllChildren();\n        this.node.removeAllChildren();\n        this.node.destroy();\n        tywx.UIManager.game.gameNode.getComponent(\"main\").beyondOpenData.active = true;\n    },\n\n    // 刷新开放数据域的纹理\n    _updateSubDomainCanvas() {\n        if (!this.tex || !this.proxySpriteFrame || !this.sprOpenDataCanvasProxy) {\n            return;\n        }\n        var openDataContext = wx.getOpenDataContext();\n        var sharedCanvas = openDataContext.canvas;\n        this.tex.initWithElement(sharedCanvas);\n        this.tex.handleLoadedTexture();\n\n        var spriteFrame = this.proxySpriteFrame;\n        var sprite = this.sprOpenDataCanvasProxy;\n        sprite.spriteFrame = spriteFrame;\n        sprite.spriteFrame._refreshTexture(this.tex);\n    },\n\n    update(dt) {\n        this._updateSubDomainCanvas();\n    },\n});"]}