{"version":3,"sources":["../../../../../assets/Script/models/assets/Script/models/celltile.js"],"names":["config","require","cc","Class","extends","Component","properties","cells","default","type","Sprite","number","Label","touchEft","touchEndEft","Node","hcEft","newPlayerEf","renumber","clickcall","visByNum","num","renum","i","length","node","active","string","setColor","color","changeShow","colors","tywx","ado","Constants","GameCenterConfig","celltilenumColors","setClickCall","getReNumber","setId","id","setCantClick","cantclick","onLoad","self","on","event","playTouchEndEff","playZhEff","playDaijiEff","anim","getComponent","Animation","states","getAnimationState","isPlaying","animationState","play","wrapMode","WrapMode","Loop","stopDaijiEff","stop","scaleX","scaleY","playNewPlayerEff","stopZhEff"],"mappings":"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","file":"celltile.js","sourceRoot":"../../../../../assets/Script/models","sourcesContent":["/*\n   游戏中的显示的单个小方块格子\n   created by gyc on 2018-08-12.\n   final changed by gyc on 2018-08-15.\n*/ \nvar config = require(\"AddOneConfig\")\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 格子显示的图片数组\n        cells:{\n            default: [],\n            type: cc.Sprite\n        },\n        // 格子上显示的数字\n        number:{\n            default: null,\n            type: cc.Label\n        },\n    \n        // 点击开始的按钮\n        touchEft:{\n            default: null,\n            type: cc.Sprite\n        },\n        // 点击结束的动画\n        touchEndEft:{\n            default: null,\n            type: cc.Node\n        },\n        // 合成的动画\n        hcEft:{\n            default: null,\n            type: cc.Node,\n        },\n        // 新手引导的动画\n        newPlayerEf:{\n            default: null,\n            type:cc.Node,\n        },\n        // 当前显示的数字\n        renumber:0,\n        // 点击回调函数\n        clickcall:null,\n    },\n\n    /*\n        调用: 格子数字变化的时候调用\n        功能: 刷新格子的显示\n        参数: [\n            num: 颜色值下标\n            renum: 真正显示的数字\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    visByNum:function(num,renum){\n        for(var i = 0; i < this.cells.length; i++){\n            if(i == num - 1){\n                this.cells[i].node.active = true;\n            }else{\n                this.cells[i].node.active = false;\n            }\n        }  \n        this.number.string = renum;\n        this.renumber = renum;\n       \n    },\n \n   \n    /*\n        调用: 格子数字变化的时候调用\n        功能: 刷新格子显示的数字颜色\n        参数: [\n            color: 当前显示数字的颜色\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n   setColor:function(color){\n      this.number.node.color = color;\n    //   this.hide.node.color = color;\n   },\n  \n    changeShow:function(num){\n        let colors = tywx.ado.Constants.GameCenterConfig.celltilenumColors[num - 1];\n        this.setColor(new cc.color(colors[0],colors[1],colors[2],255));\n        this.visByNum(num, num)\n    },\n   /*\n        调用: 设置格子点击的回调函数\n        功能: 设置格子点击的回调函数\n        参数: [\n            clickcall: 回调函数 type: Function\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    setClickCall:function(clickcall){\n       this.clickcall = clickcall;\n    },\n   \n     /*\n        调用: 逻辑调用\n        功能: 得到当前格子显示的数字\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    getReNumber:function(){\n        return this.renumber;\n    },\n    \n    setId:function(id){\n        this.id = id;\n    },\n\n    setCantClick:function(cantclick){\n        this.cantclick = cantclick;\n    },\n    \n    /*\n        调用: 节点加载完成后回调\n        功能: 初始化部分逻辑\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    onLoad(){\n        // 设置成屏蔽层\n        var self = this;\n        // this.hide.node.active = false;\n        this.node.on('touchstart', function ( event ) {\n            if(self.cantclick == true){\n               self.touchEft.node.active = false;\n            }else{\n               self.touchEft.node.active = true;\n            }\n            \n            return false;\n        });\n\n        this.node.on('touchend', function ( event ) {\n            self.touchEft.node.active = false;\n            self.playTouchEndEff();\n            if(self.clickcall != null){\n               self.clickcall(self.id, self);\n            }\n        });\n\n        this.node.on('touchcancel', function ( event ) {\n            self.touchEft.node.active = false;\n        });\n   },\n\n    /*\n        调用: 点击格子结束\n        功能: 播放点击时候的动画\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n   playTouchEndEff: function(){\n    //    var anim = this.touchEndEft.getComponent(cc.Animation);\n    //    anim.play(\"yuan_dh\");\n   },\n\n \n    /*\n        调用: 数字加一组合后\n        功能: 播放组合的动画\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n   playZhEff: function(){\n    //    tywx.LOGE(\"播放合成动画了吗\")\n    //    var anim = this.hcEft.getComponent(cc.Animation);\n    //    anim.play(\"yindao_hebing\");\n   },\n\n\n\n      /*\n        调用: 新手引导的时候的调用\n        功能: 播放新手引导的圆圈动画\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    playDaijiEff: function(){\n        this.node.active = true;\n        var anim = this.node.getComponent(cc.Animation);\n        var states = anim.getAnimationState('daiji');\n        if(states.isPlaying == false){\n            var animationState = anim.play(\"daiji\");\n            animationState.wrapMode = cc.WrapMode.Loop;\n        }\n    },\n\n\n  /*\n        调用: 新手引导的时候的调用\n        功能: 播放新手引导的圆圈动画\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    stopDaijiEff: function(){\n        var anim = this.node.getComponent(cc.Animation);\n        anim.stop(\"daiji\");\n        this.node.scaleX = 1;\n        this.node.scaleY = 1;\n        \n    },\n\n\n    /*\n        调用: 新手引导的时候的调用\n        功能: 播放新手引导的圆圈动画\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    playNewPlayerEff: function(){\n        // this.newPlayerEf.active = true;\n        // var anim = this.newPlayerEf.getComponent(cc.Animation);\n        // anim.play(\"yindao_suofang\");\n    },\n\n\n    /*\n        调用: 数字加一组合后\n        功能: 播放组合的动画\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    stopZhEff: function(){\n        // var anim = this.newPlayerEf.getComponent(cc.Animation);\n        // this.newPlayerEf.active = false;\n        // anim.stop(\"yindao_suofang\");\n    },\n    \n});\n"]}