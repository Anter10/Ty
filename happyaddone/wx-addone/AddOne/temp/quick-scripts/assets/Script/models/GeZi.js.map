{"version":3,"sources":["GeZi.js"],"names":["config","require","block","module","exports","id","parent","color","cc","num","posx","tywx","ado","Constants","GameCenterConfig","swidth","gezi_pitch","posy","parseInt","setnum","colorindex","color_list","length","colors","setColor","getAllgz","getAllmask","settoblock","setinfo","setpos","settoblockAndNumber","settoblockvalue","draw","cell","tilescript","getComponent","pngnum","celltilenumColors","visByNum","cindex","Sprite","node","x","gezi_size","y"],"mappings":"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","file":"GeZi.js","sourceRoot":"../../../../../assets/Script/models","sourcesContent":["\n/*\n    游戏的基本单元：格子（真实的格子）\n    定义他的数字和颜色，色块的所有者\n    created by gyc on 2018-08-01.\n*/\n\nvar config = require(\"AddOneConfig\")\nvar block =  require(\"GeZiData\")\n\n\nmodule.exports = function(id,parent){\n    // 格子的ID\n    this.id = id;\n    // 格子的颜色\n    this.color = cc.color(0,0,0,0);\n    // 格子现实的的数字\n    this.num = 0;\n    // 格子的容器\n    this.parent = parent;\n    // 格子的x坐标\n    this.posx = 25 + (tywx.ado.Constants.GameCenterConfig.swidth - (5 * tywx.ado.Constants.GameCenterConfig.gezi_pitch)) / 2 + (id % 5) * (tywx.ado.Constants.GameCenterConfig.gezi_pitch) + 2;\n    // 格子的Y坐标\n    this.posy = 304 + parseInt(id / 5) * (tywx.ado.Constants.GameCenterConfig.gezi_pitch);\n    // 格子的数据层\n    this.block = new block(this);\n    \n    /*\n        调用: 更新Num的时候调用\n        功能: 更新当前的num 并根据num来更新显示的颜色\n        参数: [\n            num: 格子显示的数字\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.setnum = function(num){\n        config = tywx.config != null?tywx.config : config;\n        this.num = num;\n        var colorindex = num - 1;\n        if(this.num > tywx.ado.Constants.GameCenterConfig.color_list.length){\n           colorindex = colorindex % tywx.ado.Constants.GameCenterConfig.color_list.length;\n        }\n        let colors = tywx.ado.Constants.GameCenterConfig.color_list[colorindex];\n        var color = cc.color(colors[0],colors[1],colors[2]);\n        this.setColor(color);\n    }\n\n    \n    /*\n        调用: 更新颜色的时候调用\n        功能: 更新当前的颜色值\n        参数: [\n            color:格子需要显示的颜色\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.setColor = function(color){\n        this.color = color;\n    }\n    \n    /*\n        调用: GeZiData,GeZi中都有调用\n        功能: 得到游戏的格子容器\n        参数: [\n            无\n        ]\n        返回值:[\n            array:存储格子的数组\n        ]\n        思路: 逻辑需要\n    */\n    this.getAllgz = function(){\n        return this.parent.getAllgz();\n    }\n    \n    /*\n        调用: GeZiData,GeZi中都有调用\n        功能: 得到游戏的mask容器\n        参数: [\n            无\n        ]\n        返回值:[\n            array:存储mask的数组\n        ]\n        思路: 逻辑需要\n    */\n    this.getAllmask= function(){\n        return this.parent.getAllmask();\n    }\n    \n   /*\n        调用: gamemain中调用\n        功能: 更新自身block的数据\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.settoblock=function(){\n        this.block.setinfo(this.color,this.num);\n        this.block.setpos(this.posx,this.posy);\n    }\n\n\n        /*\n               调用: gamemain中调用\n               功能: 更新自身block的数据\n               参数: [\n                   无\n               ]\n               返回值:[\n                   无\n               ]\n               思路: 逻辑需要\n       */\n       this.settoblockAndNumber = function (num) {\n           if(this.block.posx != this.posx && this.block.posy != this.block.posy){\n              this.block.setinfo(this.color, num);\n           }\n           this.block.setpos(this.posx, this.posy);\n       }\n    \n\n        \n   /*\n        调用: gamemain中调用\n        功能: 更新自身block的数据\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.settoblockvalue=function(){\n        this.block.setinfo(this.color,this.num);\n    }\n    \n        \n   /*\n        调用: gamemain中调用\n        功能: 绘制当前的节点\n        参数: [\n            ctx: 绘制节点的句柄\n            label:显示的label\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.draw = function(cell){\n        config = tywx.config != null?tywx.config : config;\n        // ctx.fillColor = this.block.color;\n        // ctx.roundRect(this.block.posx,this.block.posy,tywx.ado.Constants.GameCenterConfig.gezi_size,tywx.ado.Constants.GameCenterConfig.gezi_size,8);\n        // ctx.fill();\n        // lable.string = this.block.num;\n        // lable.node.x = this.block.posx-360+tywx.ado.Constants.GameCenterConfig.gezi_size/2;\n        // lable.node.y = this.block.posy-640+tywx.ado.Constants.GameCenterConfig.gezi_size/2;\n\n        var tilescript = cell.getComponent(\"celltile\");\n        var pngnum = this.block.num;\n        if(pngnum > tywx.ado.Constants.GameCenterConfig.celltilenumColors.length){\n           pngnum = pngnum % tywx.ado.Constants.GameCenterConfig.celltilenumColors.length;\n        }\n        \n        tilescript.visByNum(pngnum,this.block.num);\n        var cindex = pngnum - 1;\n        let colors = tywx.ado.Constants.GameCenterConfig.celltilenumColors[cindex];\n        tilescript.setColor(new cc.color(colors[0],colors[1],colors[2],255));\n        cell.getComponent(cc.Sprite).node.x = this.block.posx-360+tywx.ado.Constants.GameCenterConfig.gezi_size/2;\n        cell.getComponent(cc.Sprite).node.y = this.block.posy-640+tywx.ado.Constants.GameCenterConfig.gezi_size/2;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}