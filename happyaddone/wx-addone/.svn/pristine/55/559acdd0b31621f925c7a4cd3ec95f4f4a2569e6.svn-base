{"version":3,"sources":["rankitem.js"],"names":["cc","Class","extends","Component","properties","pmLabel","Label","allPmicon","default","type","Sprite","imageIcon","nickLabel","scoreLabel","updateData","data","updateView","console","log","JSON","stringify","pm","node","active","string","stringSlice","nickname","KVDataList","value","createIcon","avatarUrl","str","length","len","tmp","s","i","charCode","charCodeAt","slice","sprite","self","tsp","image","wx","createImage","onload","texture","Texture2D","initWithElement","handleLoadedTexture","spriteFrame","SpriteFrame","_gycname","e","src","start"],"mappings":"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","file":"rankitem.js","sourceRoot":"../../../../assets/Script","sourcesContent":[" /*\n    排行榜上每个微信好友的基本信息显示\n    created by gyc on 2018-08-06.\n    final changed by gyc on 2018-08-06;\n*/\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 玩家在好友中的排名显示\n        pmLabel:cc.Label,\n        // 排名1图标s\n        allPmicon:{\n            default:[],\n            type:cc.Sprite,\n        },\n        // 玩家的微信头像\n        imageIcon:cc.Sprite,\n        // 玩家的昵称\n        nickLabel:cc.Label,\n        // 玩家的积分显示\n        scoreLabel:cc.Label,\n        // 玩家的微信数据\n        \n    },\n    \n    /*\n        调用: 更新数据data并且更新data产生的view刷新\n        功能: 显示微信好友玩家的信息\n        参数: [\n           data: 微信好友的基础属性\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    updateData: function(data){\n        this.data = data;\n        this.updateView(this.data);\n    },\n   \n    /*\n        调用: 更新data的时候调用\n        功能: 显示微信好友玩家的信息\n        参数: [\n           data: 微信好友的基础属性\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    updateView: function(data){\n        console.log(\"更新数据 = \"+JSON.stringify(data))\n        if(data.pm < 3){\n            this.pmLabel.node.active = false;\n            this.allPmicon[data.pm].node.active = true;\n        }else{\n            this.pmLabel.string = data.pm + 1;\n        }\n         \n        this.nickLabel.string = this.stringSlice(data.nickname,13);\n        this.scoreLabel.string = data.KVDataList[0] == null ? 0 : data.KVDataList[0].value+\"分\";\n        this.createIcon(this.imageIcon,data.avatarUrl);\n    },\n\n    //先算出整个字符串的长度，并获得第length - 2个字符串的位置，给\"..\"留2个位置\n    stringSlice:function (str, length) {\n        if (!str) {\n            return str;\n        }\n        var len = 0;\n        var tmp = 0;\n        var s;\n        for (var i = 0; i < str.length; i++) {\n            var charCode = str.charCodeAt(i);\n            if (charCode >= 0 && charCode <= 128) {\n                tmp += 1;\n            } else { // 如果是中文则长度加2\n                tmp += 2;\n            }\n            if (tmp <= length - 2) {\n                len++;\n            }\n        }\n        if (tmp <= length) {\n            s = str.slice(0);\n        } else {\n            s = str.slice(0, len);\n            s += \"..\";\n        }\n        return s;\n    },\n    /*\n        调用: 显示玩家微信好友排行榜的时候显示\n        功能: 创建玩家的微信头像\n        参数: [\n           avatarUrl: 玩家微信头像的url\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    createIcon: function(sprite, avatarUrl) {\n         var self = this;\n         var tsp = sprite;\n         try {\n            let image = wx.createImage();\n            image.onload = () => {\n                try {\n                    let texture = new cc.Texture2D();\n                    texture.initWithElement(image);\n                    texture.handleLoadedTexture();\n                    tsp.spriteFrame = new cc.SpriteFrame(texture);\n                    console.log(\"加载失败___c1 \"+typeof(image)+sprite._gycname);\n                   \n                    // sprite.node.width=50;\n                    // sprite.node.height=50;\n                } catch (e) {\n                    console.log(\"加载失败___v \"+e);\n                    tsp.node.active = false;\n                }\n            };\n            image.src = avatarUrl;\n        }catch (e) {\n            console.log(\"加载失败____ddd \"+e);\n            tsp.node.active = false;\n        }\n    },\n\n  \n    \n    start () {\n      \n    },\n\n    \n});\n"]}