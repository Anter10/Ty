{"version":3,"sources":["../../../../assets/Script/assets/Script/ranklist.js"],"names":["CC_WECHATGAME","MAIN_MENU_NUM","prePersonIconUrl","Log","log","o1","o2","console","PTypes","friends","group","userinfo","submitscore","storefris","hideUi","cc","Class","extends","Component","properties","gameranklist","ScrollView","showloading","Label","rankItem","Prefab","gamerank","Node","titleLabel","content","friendmsd","nameLabel","scoreLabel","iconSprite","Sprite","start","self","wx","onMessage","node","active","JSON","stringify","data","method","string","getFriendData","getGroupFriendData","shareTicket","getUserInfoData","submitScore","score","storeFriends","isrestart","rank","friendicon","getUserCloudStorage","keyList","success","getres","KVDataList","length","value","window","setUserCloudStorage","key","res","fail","complete","getUserInfo","openIdList","lang","params","sharedCanvas","getSharedCanvas","context","getContext","arguments","tstore","tscore","store","userRes","userData","getFriendCloudStorage","sort","a","b","removeAllChildren","pto","i","playerInfo","pm","item","instantiate","getComponent","updateData","setPosition","addChild","layout","Layout","resizeMode","ResizeMode","NONE","frdata","tdata","fscore","chazhi","avatarUrl","nickname","createIcon","setDataToLocalStorage","keyStr","ValueStr","setStorage","e","tshareTicket","getGroupCloudStorage","onLoad","sprite","tsp","image","createImage","src","onload","event","texture","Texture2D","initWithElement","handleLoadedTexture","spriteFrame","SpriteFrame","width","y"],"mappings":"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","file":"ranklist.js","sourceRoot":"../../../../assets/Script","sourcesContent":[" /*\n    展示微信好友的排行榜\n    created by gyc on 2018-08-06.\n    final changed by gyc on 2018-08-09;\n*/\n\n// 当前是否发布微信游戏\nvar CC_WECHATGAME = true;\nvar MAIN_MENU_NUM = \"x1\";\n// 一个玩家只显示一次\nvar prePersonIconUrl = \"\"; \n// 打印输出\nvar Log = function(log, o1, o2){\n    console.log(log);\n}\n\n//  玩家发送给子域的数据类型\nvar PTypes={\n    // 得到微信好友的信息\n    friends:1,\n    // 得到某个群的信息\n    group:2,\n    // 得到玩家的基础信息\n    userinfo:3,\n    // 提交当前的得分\n    submitscore:4,\n    // 存储好友数据\n    storefris:5,\n    // 隐藏UI\n    hideUi:6,\n};\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        // 排行榜的滚动scrollview\n        gameranklist:cc.ScrollView,\n        // 显示loading的文本label\n        showloading:cc.Label,\n        // 每个scrollview的Item\n        rankItem:cc.Prefab,\n        // scrollview的父节点\n        gamerank:cc.Node,\n        // 标签\n        titleLabel:cc.Label,\n        // scrollview的容器layout\n        content:cc.Node,\n        // 超逾玩家的信息\n        friendmsd:cc.Node,\n        // 名字\n        nameLabel:cc.Label,\n        // 分数\n        scoreLabel:cc.Label,\n        // 头像\n        iconSprite:cc.Sprite,\n    },\n    \n   \n    /*\n        调用: 游戏界面开始\n        功能: 监听主域发送的数据并处理\n        参数: [\n           无\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    start () {\n        let self = this;\n        wx.onMessage(data => {\n             self.showloading.node.active = true;\n             Log(\"当前玩家给子域的数据 = \"+JSON.stringify(data));\n             if(data.method == PTypes.friends){\n               self.titleLabel.string = \"  好友排行榜\";\n               self.getFriendData();  \n             }else if(data.method == PTypes.group){\n               self.titleLabel.string = \"群组排行榜\";\n               self.getGroupFriendData(data.shareTicket);\n             }else if(data.method == PTypes.userinfo){\n                self.getUserInfoData();\n             }else if(data.method == PTypes.submitscore){\n                self.submitScore(data.score);\n             }else if(data.method == PTypes.storefris){\n                self.storeFriends(data.score, data.isrestart);\n             }else if(data.method == PTypes.hideUi){\n                self.hideUi(data.rank, data.friendicon);\n             }\n\n             \n        });\n    },\n    \n    /*\n        调用:隐藏好友头像的时候\n        功能: 隐藏当前界面的UI\n        参数: [\n           rank: 隐藏排行榜UI type: Boolean\n           friendicon: 隐藏好友头像UI type: Boolean\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    hideUi: function(rank, friendicon){\n         this.gamerank.active = rank;\n         this.friendmsd.active = friendicon;\n    },\n     \n    /*\n        调用: 游戏结束的时候调用\n        功能: 提交玩家的当前得分\n        参数: [\n           score: 玩家此次游戏的得分数\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    submitScore: function(score) {\n        var self = this;\n        if (CC_WECHATGAME) {\n            wx.getUserCloudStorage({\n                // 以key/value形式存储\n                keyList: [MAIN_MENU_NUM],\n                \n                success: function (getres) {\n                    Log('setUserCloudStorage', 'success', getres)\n                    self.showloading.node.active = false;\n                    if (getres.KVDataList.length != 0) {\n                        if (getres.KVDataList[0].value > score) {\n                            return;\n                        }\n                    }\n                    // 对用户托管数据进行写数据操作\n                    window.wx.setUserCloudStorage({\n                        KVDataList: [{key:MAIN_MENU_NUM, value: \"\" + score}],\n                        success: function (res) {\n                            Log('setUserCloudStorage', 'success', res)\n                        },\n                        fail: function (res) {\n                            Log('setUserCloudStorage', 'fail')\n                        },\n                        complete: function (res) {\n                            Log('setUserCloudStorage', 'ok')\n                        }\n                    });\n                },\n                fail: function (res) {\n                    Log('getUserCloudStorage', 'fail')\n                },\n                complete: function (res) {\n                    Log('getUserCloudStorage', 'ok')\n                }\n            });\n        } else {\n            Log(\"提交得分:\" + MAIN_MENU_NUM + \" : \" + score)\n        }\n    },\n \n    /*\n        调用: 想要使用玩家的数据的时候调用\n        功能: 得到玩家的基本信息\n        参数: [\n           store: 是否存储玩家的好友数据\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    getUserInfoData:function(){\n        wx.getUserInfo({\n            openIdList: ['selfOpenId'],\n            lang: 'zh_CN',\n            success: function(params) {\n                Log( JSON.stringify(params));\n                var sharedCanvas = wx.getSharedCanvas();\n                var context = sharedCanvas.getContext(\"2d\");\n                 \n            },\n            fail: function(params) {\n                Log( JSON.stringify(arguments));\n                var sharedCanvas = wx.getSharedCanvas();\n                var context = sharedCanvas.getContext(\"2d\");\n              \n            }\n        });\n    },\n  \n    /*\n        调用: 获得玩家的微信好友的数据\n        功能: 存储当前好友的数据 方便主域取出使用\n        参数: [\n           tstore: 是否存储玩家的好友数据\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    getFriendData: function(tstore, tscore) {\n        var score = tscore;\n        var self = this;\n        var store = tstore;\n        if(store == true){\n           self.gamerank.active = false;\n           self.friendmsd.active = false;\n        }else{\n           self.friendmsd.active = false;\n        }\n        if (CC_WECHATGAME) {\n            wx.getUserInfo({\n                openIdList: ['selfOpenId'],\n                success: (userRes) => {\n                    this.showloading.node.active = false;\n                  \n                    let userData = userRes.data[0];\n                    \n                    //取出所有好友数据\n                    wx.getFriendCloudStorage({\n                        keyList: [MAIN_MENU_NUM],\n                        success: res => {\n                            let data = res.data;\n                            Log(\"当前所有好友的数据userData = \"+JSON.stringify(data))\n                            if(store == true){\n                            //    this.setDataToLocalStorage(\"friends\",JSON.stringify(data)); \n                            }\n                            data.sort((a, b) => {\n                                if (a.KVDataList.length == 0 && b.KVDataList.length == 0) {\n                                    return 0;\n                                }\n                                if (a.KVDataList.length == 0) {\n                                    return 1;\n                                }\n                                if (b.KVDataList.length == 0) {\n                                    return -1;\n                                }\n                                return b.KVDataList[0].value - a.KVDataList[0].value;\n                            });\n                            \n                            if(store != true){\n                                Log(\"当前是否存储1 \"+store);\n                                self.gamerank.active = true;\n                                self.friendmsd.active = false;\n                                \n                                self.gameranklist.content.removeAllChildren();\n                                var pto  = 20;\n                                for (let i = 0; i < data.length; i++) {\n                                    var playerInfo = data[i];\n                                    playerInfo.pm = i;\n                                    if(i == 0){\n                                        pto = 55;\n                                    }\n                                    var item = cc.instantiate(this.rankItem);\n                                    item.getComponent('rankitem').updateData(playerInfo);\n                                    item.setPosition(0, -80 * i - pto);\n                                    this.gameranklist.content.addChild(item,122);\n                                }\n\n                               if (data.length <= 8) {\n                                    let layout = this.content.getComponent(cc.Layout);\n                                    layout.resizeMode = cc.Layout.ResizeMode.NONE;\n                                }\n                            }else if(store == true){\n                               \n                                // 得出和自己分数最进的好友\n                                var frdata = null;\n                               \n                                for (let i = data.length - 1; i >= 0 ; i--) {\n                                    var tdata = data[i];\n                                    var fscore = tdata.KVDataList[0] == null ? 0 : tdata.KVDataList[0].value;\n                                    var chazhi = fscore - score;\n                                   \n                                    if( chazhi > 0 && chazhi <= 1000 && userData.avatarUrl != tdata.avatarUrl){\n                                       if( prePersonIconUrl == tdata.avatarUrl){\n                                           frdata = null;\n                                           break;\n                                       }else{\n                                           frdata = tdata;\n                                           frdata.score = fscore;\n                                           prePersonIconUrl = tdata.avatarUrl;\n                                           break; \n                                       }\n                                    }\n                                }\n                                Log(\"当前是否存储2 \"+store ); // prePersonIconUrl != tdata.avatarUrl &&\n                                // 如果有玩家的分数大于自己的 则显示\n                                if(frdata != null){\n                                   self.friendmsd.active = true;\n                                   self.nameLabel.string = frdata.nickname;\n                                   self.scoreLabel.string = frdata.score;\n                                   self.createIcon(self.iconSprite,frdata.avatarUrl);\n                                   Log(\"刷新成功\");\n                                }else{\n                                   self.friendmsd.active = false;\n                                }\n                            }\n                        },\n                        fail: res => {\n                            Log(\"wx.getFriendCloudStorage fail\", res);\n                            self.showloading.string = \"数据加载失败，请检测网络，谢谢。\";\n                        },\n                    });\n                },\n                fail: (res) => {\n                    self.showloading.string = \"数据加载失败，请检测网络，谢谢。\";\n                }\n            });\n        }\n    },\n\n    /*\n        调用: 获得好友数据的时候调用\n        功能: 存储当前好友的数据 方便主域取出使用\n        参数: [\n           keyStr:获得好友数据的KEY type: string\n           ValueStr:好友的数据 type: string\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    setDataToLocalStorage: function (keyStr, ValueStr) {\n        try {\n            Log(\"wx setStorage = \"+wx.setStorage);\n            if(wx && wx.setStorage) {\n                window.wx.setStorage({\n                    key: keyStr,\n                    data: ValueStr + ''\n                });\n                Log(\"存储数据成功\"+ValueStr);\n            }\n        } catch (e) {\n            // cc.sys.localStorage.setItem(keyStr, ValueStr+\"\");\n           \n            Log(\"存储数据失败\", \"setItemToLocalStorage fail\");\n        }\n    },\n   \n    /*\n        调用: 游戏界面显示即将超越的时候使用\n        功能: 存储玩家好友的数据\n        参数: [\n           score:玩家当前分数\n           isrestart: 当前游戏是否为重新开始的游戏\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    storeFriends:function(score, isrestart) {\n        if(isrestart == true){\n           prePersonIconUrl = \"\";\n        }\n        this.getFriendData(true, score)\n    },\n\n   /*\n        调用: 主域手动显示群组排行榜的时候调用\n        功能: 得到玩家微信群组的数据\n        参数: [\n           tshareTicket: 得到群组的ID\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    getGroupFriendData: function(tshareTicket) {\n        var self = this;\n        var shareTicket = tshareTicket;\n        self.friendmsd.active = false;\n        if (CC_WECHATGAME) {\n            wx.getUserInfo({\n                openIdList: ['selfOpenId'],\n                success: (userRes) => {\n                    Log('success', userRes.data)\n                    let userData = userRes.data[0];\n                    //取出所有好友数据\n                    wx.getGroupCloudStorage({\n                    shareTicket: shareTicket,\n                    keyList: [MAIN_MENU_NUM],\n                        success: res => {\n                            Log(\"群组数据 = \", res);\n                            \n                            let data = res.data;\n                            data.sort((a, b) => {\n                                if (a.KVDataList.length == 0 && b.KVDataList.length == 0) {\n                                    return 0;\n                                }\n                                if (a.KVDataList.length == 0) {\n                                    return 1;\n                                }\n                                if (b.KVDataList.length == 0) {\n                                    return -1;\n                                }\n                                return b.KVDataList[0].value - a.KVDataList[0].value;\n                            });\n                            this.showloading.node.active = false;\n                            self.gameranklist.content.removeAllChildren();\n                            var pto  = 35;\n                            for (let i = 0; i < data.length; i++) {\n                                var playerInfo = data[i];\n                                playerInfo.pm = i;\n                                var item = cc.instantiate(this.rankItem);\n                                item.getComponent('rankitem').updateData(playerInfo);\n                                if(i == 0){\n                                    pto = 55;\n                                }\n                                item.setPosition(0, -80 * i - pto);\n                                this.gameranklist.content.addChild(item,122);\n                            }\n                            if (data.length <= 8) {\n                                let layout = this.content.getComponent(cc.Layout);\n                                layout.resizeMode = cc.Layout.ResizeMode.NONE;\n                            }\n                           \n                        },\n                        fail: res => {\n                            Log(\"得到群组数据失败\", res);\n                            // this.loadingLabel.getComponent(cc.Label).string = \"数据加载失败，请检测网络，谢谢。\";\n                        },\n                    });\n                },\n                fail: (res) => {\n                    // this.loadingLabel.getComponent(cc.Label).string = \"数据加载失败，请检测网络，谢谢。\";\n                }\n            });\n        }\n    },\n\n    onLoad:function(){\n       Log(\"Hvj\");\n    },\n /*\n        调用: 显示玩家微信好友排行榜的时候显示\n        功能: 创建玩家的微信头像\n        参数: [\n           avatarUrl: 玩家微信头像的url\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n   createIcon: function(sprite, avatarUrl) {\n        var self = this;\n        var tsp = sprite;\n        try {\n            var image = wx.createImage();\n            image.src = avatarUrl;\n            image.onload = (event) => {\n            try {\n                let texture = new cc.Texture2D();\n                texture.initWithElement(image);\n                texture.handleLoadedTexture();\n                tsp.spriteFrame = new cc.SpriteFrame(texture);\n                    Log(avatarUrl + \" ni/ \"+sprite.node.width + \" == \"+texture.width +\" \" + sprite.node.y)\n            } catch (e) {\n                Log(\"图片加载失败\");\n            }\n            };\n            \n            \n        }catch (e) {\n        \n        }\n    }\n\n});\n"]}