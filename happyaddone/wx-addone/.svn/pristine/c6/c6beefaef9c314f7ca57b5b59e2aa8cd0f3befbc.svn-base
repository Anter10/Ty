{"version":3,"sources":["GeZiData.js"],"names":["config","require","module","exports","parent","color","num","posx","posy","destx","desty","actiontime_keep","speed_keep","id_keep","id_dest","speedx","speedy","actiontime","effectid","effecttime","setinfo","c","n","setpos","x","y","setspeed","spx","spy","t","setdest","adjustmove","alp","getAllgz","adjustdrop","tywx","ado","Constants","GameCenterConfig","drop_time","tickmove","dt","getAllmask","from","tickeffect","spr0","spr1"],"mappings":"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","file":"GeZiData.js","sourceRoot":"../../../../../assets/Script/models","sourcesContent":["/*\n    每个格子的单元数据:\n    created by gyc on 2018-08-01.\n*/\nvar config = require(\"AddOneConfig\")\n\nmodule.exports = (function (parent) {\n    // 格子显示的颜色\n    this.color = null;\n    // 格子显示的数字\n    this.num = 0;\n    // 格子的X位置\n    this.posx = 0;\n    // 格子的Y位置\n    this.posy = 0;\n    // 格子的目标位置X\n    this.destx = 0;\n    // 格子的目标位置Y\n    this.desty = 0;\n    // 格子动作持续时间\n    this.actiontime_keep = 0;\n    // 各自的移动速度\n    this.speed_keep = 0;\n    this.id_keep = -1;\n    this.id_dest = -1;\n    this.parent = parent;\n    this.speedx = 0;\n    this.speedy = 0;\n    this.actiontime = 0;\n\n    this.effectid = -1;\n    this.effecttime = 0;\n\n    /*\n        调用: GeZi中调用\n        功能: 更新格子的颜色和显示数字\n        参数: [\n            c: 格子显示的颜色\n            n: 显示的数字\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.setinfo = function (c, n) {\n        this.color = c;\n        this.num = n;\n    }\n\n    /*\n        调用: GeZi中调用\n        功能: 更新格子x,y坐标\n        参数: [\n            x: 格子的x坐标\n            y: 格子的y坐标\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.setpos = function (x, y) {\n        this.posx = x;\n        this.posy = y;\n    }\n\n    /*\n        调用: GeZi中调用\n        功能: 更新格子的颜色和显示数字\n        参数: [\n            spx: x方向的速度\n            spy: y方向的速度\n            t: 持续时间\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.setspeed = function (spx, spy, t) {\n        this.speedx = spx;\n        this.speedy = spy;\n        this.actiontime = t;\n    }\n\n    /*\n        调用: GeZi中调用\n        功能: 更新格子的目标坐标\n        参数: [\n            x: 格子的x目标坐标\n            y: 格子的y目标坐标\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.setdest = function (x, y) {\n        this.destx = x;\n        this.desty = y;\n    }\n\n    /*\n        调用: GeZiData, gamemain中调用\n        功能: 调整格子移动\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.adjustmove = function () {\n        if (this.id_dest == -1)\n            return;\n\n        this.actiontime = this.actiontime_keep;\n        var alp = this.id_dest - this.id_keep;\n        if (alp == 2) {\n            this.speedx = this.speed_keep;\n            this.speedy = 0;\n        } else if (alp == 13) {\n            this.speedx = -this.speed_keep / 2;\n            this.speedy = this.speed_keep / 1.732;\n        } else if (alp == 15) {\n            this.speedx = this.speed_keep / 2;\n            this.speedy = this.speed_keep / 1.732;\n        } else if (alp == -2) {\n            this.speedx = -this.speed_keep;\n            this.speedy = 0;\n        } else if (alp == -13) {\n            this.speedx = this.speed_keep / 2;\n            this.speedy = -this.speed_keep / 1.732;\n        } else if (alp == -15) {\n            this.speedx = -this.speed_keep / 2;\n            this.speedy = -this.speed_keep / 1.732;\n        }\n        this.destx = this.parent.getAllgz()[this.id_dest].posx;\n        this.desty = this.parent.getAllgz()[this.id_dest].posy;\n    }\n\n    /*\n        调用: gamemain中调用\n        功能: 调整格子掉落\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.adjustdrop = function (spx, spy) {\n            if (this.id_dest == -1)\n                return;\n            config = tywx.config != null ? tywx.config : config;\n            this.actiontime = tywx.ado.Constants.GameCenterConfig.drop_time;\n            this.speedx = spx;\n            this.speedy = spy;\n            this.destx = this.parent.getAllgz()[this.id_dest].posx;\n            this.desty = this.parent.getAllgz()[this.id_dest].posy;\n        },\n\n        /*\n             调用: gamemain中调用\n             功能: 格子移动\n             参数: [\n                 无\n             ]\n             返回值:[\n                 无\n             ]\n             思路: 逻辑需要\n         */\n        this.tickmove = function (dt) {\n            if (this.actiontime > 0) {\n                this.actiontime -= dt;\n\n                this.posx += this.speedx * dt;\n                this.posy += this.speedy * dt;\n\n                if (this.actiontime <= 0) {\n                    this.posx = this.destx;\n                    this.posy = this.desty;\n                    this.speedx = 0;\n                    this.speedy = 0;\n                    this.id_keep = this.id_dest;\n                    this.id_dest = this.parent.getAllmask()[this.id_dest].from;\n                    this.adjustmove();\n                }\n            }\n        }\n\n    /*\n        调用: gamemain中调用\n        功能: 格子移动\n        参数: [\n            dt: update传进来的值\n            spr0:星星1的节点\n            spr1:星星2的节点\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.tickeffect = function (dt, spr0, spr1) {\n        // if(this.effectid >= 0 && this.effecttime > 0){\n        //    if(this.effectid==1){\n        //         spr1.node.x = this.posx + tywx.ado.Constants.GameCenterConfig.gezi_size / 2;\n        //         spr1.node.y = this.posy + tywx.ado.Constants.GameCenterConfig.gezi_size / 2;\n\n        //         spr1.node.setScale(1 - this.effecttime);\n        //         if(spr1.node.active == false){\n        //            spr1.node.active = true;\n        //         }\n        //     }\n\n        //     this.effecttime -= dt;\n\n        //     if(this.effecttime <= 0){\n        //         this.effecttime = 0;\n        //         if(spr0.node.active == true && this.effectid==0){\n        //             spr0.node.active = false;\n        //         }\n        //         if(spr1.node.active == true && this.effectid==1){\n        //             spr1.node.active = false;\n        //         }\n        //         this.effectid = -1;\n        //     }\n        // }\n    }\n});"]}