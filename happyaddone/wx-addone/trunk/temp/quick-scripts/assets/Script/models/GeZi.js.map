{"version":3,"sources":["GeZi.js"],"names":["config","require","block","module","exports","id","parent","color","cc","num","posx","swidth","gezi_pitch","posy","parseInt","setnum","tywx","colorindex","color_list","length","colors","setColor","getAllgz","getAllmask","settoblock","setinfo","setpos","settoblockvalue","draw","cell","tilescript","getComponent","pngnum","celltilenumColors","visByNum","cindex","Sprite","node","x","gezi_size","y"],"mappings":"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","file":"GeZi.js","sourceRoot":"../../../../../assets/Script/models","sourcesContent":["\n/*\n    游戏的基本单元：格子（真实的格子）\n    定义他的数字和颜色，色块的所有者\n    created by gyc on 2018-08-01.\n*/\n\nvar config = require(\"AddOneConfig\")\nvar block =  require(\"GeZiData\")\n\n\nmodule.exports = function(id,parent){\n    // 格子的ID\n    this.id = id;\n    // 格子的颜色\n    this.color = cc.color(0,0,0,0);\n    // 格子现实的的数字\n    this.num = 0;\n    // 格子的容器\n    this.parent = parent;\n    // 格子的x坐标\n    this.posx = 25 + (config.swidth - (5 * config.gezi_pitch)) / 2 + (id % 5) * (config.gezi_pitch) + 2;\n    // 格子的Y坐标\n    this.posy = 304 + parseInt(id / 5) * (config.gezi_pitch);\n    // 格子的数据层\n    this.block = new block(this);\n    \n    /*\n        调用: 更新Num的时候调用\n        功能: 更新当前的num 并根据num来更新显示的颜色\n        参数: [\n            num: 格子显示的数字\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.setnum = function(num){\n        config = tywx.config != null?tywx.config : config;\n        this.num = num;\n        var colorindex = num - 1;\n        if(this.num > config.color_list.length){\n           colorindex = colorindex % config.color_list.length;\n        }\n        let colors = config.color_list[colorindex];\n        var color = cc.color(colors[0],colors[1],colors[2]);\n        this.setColor(color);\n    }\n\n    \n    /*\n        调用: 更新颜色的时候调用\n        功能: 更新当前的颜色值\n        参数: [\n            color:格子需要显示的颜色\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.setColor = function(color){\n        this.color = color;\n    }\n    \n    /*\n        调用: GeZiData,GeZi中都有调用\n        功能: 得到游戏的格子容器\n        参数: [\n            无\n        ]\n        返回值:[\n            array:存储格子的数组\n        ]\n        思路: 逻辑需要\n    */\n    this.getAllgz = function(){\n        return this.parent.getAllgz();\n    }\n    \n    /*\n        调用: GeZiData,GeZi中都有调用\n        功能: 得到游戏的mask容器\n        参数: [\n            无\n        ]\n        返回值:[\n            array:存储mask的数组\n        ]\n        思路: 逻辑需要\n    */\n    this.getAllmask= function(){\n        return this.parent.getAllmask();\n    }\n    \n   /*\n        调用: gamemain中调用\n        功能: 更新自身block的数据\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.settoblock=function(){\n        this.block.setinfo(this.color,this.num);\n        this.block.setpos(this.posx,this.posy);\n    }\n    \n        \n   /*\n        调用: gamemain中调用\n        功能: 更新自身block的数据\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.settoblockvalue=function(){\n        this.block.setinfo(this.color,this.num);\n    }\n    \n        \n   /*\n        调用: gamemain中调用\n        功能: 绘制当前的节点\n        参数: [\n            ctx: 绘制节点的句柄\n            label:显示的label\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    this.draw = function(cell){\n        config = tywx.config != null?tywx.config : config;\n        // ctx.fillColor = this.block.color;\n        // ctx.roundRect(this.block.posx,this.block.posy,config.gezi_size,config.gezi_size,8);\n        // ctx.fill();\n        // lable.string = this.block.num;\n        // lable.node.x = this.block.posx-360+config.gezi_size/2;\n        // lable.node.y = this.block.posy-640+config.gezi_size/2;\n\n        var tilescript = cell.getComponent(\"celltile\");\n        var pngnum = this.block.num;\n        if(pngnum > config.celltilenumColors.length){\n           pngnum = pngnum % config.celltilenumColors.length;\n        }\n        tilescript.visByNum(pngnum,this.block.num);\n        var cindex = pngnum - 1;\n        let colors = config.celltilenumColors[cindex];\n        tilescript.setColor(new cc.color(colors[0],colors[1],colors[2],255));\n        cell.getComponent(cc.Sprite).node.x = this.block.posx-360+config.gezi_size/2;\n        cell.getComponent(cc.Sprite).node.y = this.block.posy-640+config.gezi_size/2;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}